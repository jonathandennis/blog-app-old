{"ast":null,"code":"var _jsxFileName = \"/Users/jonathandennis/MOOC_fullStack/part5/bloglist-frontend/src/components/Blog.js\";\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { likeBlog } from '../reducers/blogReducer';\nimport { setNotification } from '../reducers/notificationReducer';\n\nconst Blog = ({\n  blog\n}) => {\n  console.log('blog in Blog: ', blog); //const [ visibility, setVisibility ] = useState(false)\n  //const blogs = useSelector(state => state.blogs)\n\n  const dispatch = useDispatch();\n  /* const blogStyle = {\n    paddingTop: 10,\n    paddingLeft: 2,\n    border: 'solid',\n    borderWidth: 1,\n    marginBottom: 5\n  } */\n\n  /* const hideWhenVisible = { display: visibility ? 'none': '' }\n  const showWhenVisibile = { display: visibility ? '' : 'none' } */\n  // Allow blogs to be deleted only if blog post created by user\n\n  /* const showDeleteButton = () => {\n     if (loggedUser.username === blog.user['username']) {\n      return (\n        <button onClick={() => handleDeleteBlog(blog.id)}>Remove</button>\n      )\n    }\n  }\n   const handleDeleteBlog = (id) => {\n    //const toDelete = blogs.find(blog => blog.id === id)\n    const toDelete = blog\n     if (window.confirm(`Remove: ${toDelete.title} By: ${toDelete.author}?`)) {\n       dispatch(deleteBlog(id))\n      dispatch(setNotification(`${toDelete.title} by ${toDelete.author} was successfully deleted!`, 5))\n      //notify(`${toDelete.title} by ${toDelete.author} was successfully deleted!`, 'ok')\n    }\n  } */\n\n  const handleLike = async () => {\n    console.log('blog in handleLike: ', blog);\n\n    try {\n      dispatch(likeBlog(blog));\n      dispatch(setNotification(`Like added to: ${blog.title}`, 5)); //notify(`Like added to: ${blog.title}`, 'ok')\n    } catch (exception) {\n      dispatch(setNotification('Error!', 5)); //notify('Error!')\n    }\n  };\n\n  if (!blog) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, blog.title, \" \", blog.author)), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, blog.url, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }), blog.likes, \" Likes\", /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleLike,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, \"like\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }), \"added by: \", blog.user.name));\n};\n\nexport default Blog;","map":{"version":3,"sources":["/Users/jonathandennis/MOOC_fullStack/part5/bloglist-frontend/src/components/Blog.js"],"names":["React","useDispatch","likeBlog","setNotification","Blog","blog","console","log","dispatch","handleLike","title","exception","author","url","likes","user","name"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,SAASC,QAAT,QAAyB,yBAAzB;AACA,SAASC,eAAT,QAAgC,iCAAhC;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AACzBC,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BF,IAA9B,EADyB,CAEzB;AAEA;;AACA,QAAMG,QAAQ,GAAGP,WAAW,EAA5B;AAEA;;;;;;;;AAQA;;AAGA;;AACA;;;;;;;;;;;;;;;;;AAqBA,QAAMQ,UAAU,GAAG,YAAY;AAC7BH,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCF,IAApC;;AAEA,QAAI;AACFG,MAAAA,QAAQ,CAACN,QAAQ,CAACG,IAAD,CAAT,CAAR;AACAG,MAAAA,QAAQ,CAACL,eAAe,CAAE,kBAAiBE,IAAI,CAACK,KAAM,EAA9B,EAAiC,CAAjC,CAAhB,CAAR,CAFE,CAGF;AACD,KAJD,CAIE,OAAOC,SAAP,EAAiB;AACjBH,MAAAA,QAAQ,CAACL,eAAe,CAAC,QAAD,EAAW,CAAX,CAAhB,CAAR,CADiB,CAEjB;AACD;AACF,GAXD;;AAaA,MAAI,CAACE,IAAL,EAAW;AACT,WAAO,IAAP;AACD;;AAED,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,IAAI,CAACK,KAAV,OAAkBL,IAAI,CAACO,MAAvB,CAFF,CADF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGP,IAAI,CAACQ,GADR,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGGR,IAAI,CAACS,KAHR,yBAIE;AAAQ,IAAA,OAAO,EAAEL,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,gBAMaJ,IAAI,CAACU,IAAL,CAAUC,IANvB,CALF,CADF;AAgBD,CAzED;;AA2EA,eAAeZ,IAAf","sourcesContent":["import React from 'react'\nimport { useDispatch } from 'react-redux'\n\nimport { likeBlog } from '../reducers/blogReducer'\nimport { setNotification } from '../reducers/notificationReducer'\n\nconst Blog = ({ blog }) => {\n  console.log('blog in Blog: ', blog)\n  //const [ visibility, setVisibility ] = useState(false)\n\n  //const blogs = useSelector(state => state.blogs)\n  const dispatch = useDispatch()\n\n  /* const blogStyle = {\n    paddingTop: 10,\n    paddingLeft: 2,\n    border: 'solid',\n    borderWidth: 1,\n    marginBottom: 5\n  } */\n\n  /* const hideWhenVisible = { display: visibility ? 'none': '' }\n  const showWhenVisibile = { display: visibility ? '' : 'none' } */\n\n  // Allow blogs to be deleted only if blog post created by user\n  /* const showDeleteButton = () => {\n\n    if (loggedUser.username === blog.user['username']) {\n      return (\n        <button onClick={() => handleDeleteBlog(blog.id)}>Remove</button>\n      )\n    }\n  }\n\n  const handleDeleteBlog = (id) => {\n    //const toDelete = blogs.find(blog => blog.id === id)\n    const toDelete = blog\n\n    if (window.confirm(`Remove: ${toDelete.title} By: ${toDelete.author}?`)) {\n\n      dispatch(deleteBlog(id))\n      dispatch(setNotification(`${toDelete.title} by ${toDelete.author} was successfully deleted!`, 5))\n      //notify(`${toDelete.title} by ${toDelete.author} was successfully deleted!`, 'ok')\n    }\n  } */\n\n  const handleLike = async () => {\n    console.log('blog in handleLike: ', blog)\n\n    try {\n      dispatch(likeBlog(blog))\n      dispatch(setNotification(`Like added to: ${blog.title}`, 5))\n      //notify(`Like added to: ${blog.title}`, 'ok')\n    } catch (exception){\n      dispatch(setNotification('Error!', 5))\n      //notify('Error!')\n    }\n  }\n\n  if (!blog) {\n    return null\n  }\n\n  return(\n    <div>\n      <div>\n        <br />\n        <h2>{blog.title} {blog.author}</h2>\n      </div>\n      <div>\n        {blog.url}\n        <br />\n        {blog.likes} Likes\n        <button onClick={handleLike}>like</button>\n        <br />\n        added by: {blog.user.name}\n      </div>\n    </div>\n  )\n}\n\nexport default Blog\n"]},"metadata":{},"sourceType":"module"}