{"ast":null,"code":"var _jsxFileName = \"/Users/jonathandennis/MOOC_fullStack/part5/bloglist-frontend/src/components/Blog.js\";\nimport React, { useState } from 'react';\nimport blogService from '../services/blogs';\n\nconst Blog = ({\n  user,\n  blogs,\n  setBlogs,\n  notify,\n  deleteBlog,\n  blog\n}) => {\n  const [visibility, setVisibility] = useState(false);\n  const blogStyle = {\n    paddingTop: 10,\n    paddingLeft: 2,\n    border: 'solid',\n    borderWidth: 1,\n    marginBottom: 5\n  };\n  const hideWhenVisible = {\n    display: visibility ? 'none' : ''\n  };\n  const showWhenVisibile = {\n    display: visibility ? '' : 'none'\n  }; // Allow blogs to be deleted only if blog post created by user\n\n  const showDeleteButton = id => {\n    const blog = blogs.find(blog => blog.id === id);\n\n    if (user.username === blog.user['username']) {\n      return /*#__PURE__*/React.createElement(\"button\", {\n        onClick: () => deleteBlog(blog.id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 9\n        }\n      }, \"Remove\");\n    }\n  }; // const handleLikes = (id) => {\n  //   const likeBlog = blogs.find(blog => blog.id === id)\n  //   console.log('blog: ', likeBlog)\n  //   const updateLike = { ...likeBlog, likes: likeBlog.likes + 1 }\n  //   blogService\n  //     .update(id, updateLike)\n  //     .then(response =>\n  //       setBlogs(blogs.map(blog => blog.id !== id ? blog : response))\n  //     )\n  // }\n\n\n  const likeBlog = async id => {\n    const blog = blogs.find(blog => blog.id === id);\n    const likedBlog = {\n      title: blog.title,\n      likes: blog.likes + 1,\n      author: blog.author,\n      url: blog.url,\n      id: blog.id,\n      user: blog.user.id\n    };\n    console.log('liked blog: ', likedBlog);\n\n    try {\n      await blogService.update(blog.id, likedBlog);\n      console.log('blog.id: ', blog.id);\n      setBlogs(blogs.map(blog => blog.id !== likedBlog.id ? blog : likedBlog));\n      console.log('likedBlog in try: ', likedBlog);\n      notify(`Like added to: ${blog.title}`, 'ok');\n    } catch (exception) {\n      notify('Error!');\n    }\n  };\n\n  const toggle = () => {\n    setVisibility(!visibility);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: blogStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: hideWhenVisible,\n    className: \"blog\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, blog.title, blog.author, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, \"view\")), /*#__PURE__*/React.createElement(\"div\", {\n    style: showWhenVisibile,\n    className: \"blogView\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, blog.title, blog.author, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, \"hide\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }), blog.url, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }), blog.likes, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: likeBlog,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, \"like\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }), blog.user.name, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }), showDeleteButton()));\n};\n\nexport default Blog;","map":{"version":3,"sources":["/Users/jonathandennis/MOOC_fullStack/part5/bloglist-frontend/src/components/Blog.js"],"names":["React","useState","blogService","Blog","user","blogs","setBlogs","notify","deleteBlog","blog","visibility","setVisibility","blogStyle","paddingTop","paddingLeft","border","borderWidth","marginBottom","hideWhenVisible","display","showWhenVisibile","showDeleteButton","id","find","username","likeBlog","likedBlog","title","likes","author","url","console","log","update","map","exception","toggle","name"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport blogService from '../services/blogs'\n\nconst Blog = ({ user, blogs, setBlogs, notify, deleteBlog, blog }) => {\n\n  const [ visibility, setVisibility ] = useState(false)\n\n  const blogStyle = {\n    paddingTop: 10,\n    paddingLeft: 2,\n    border: 'solid',\n    borderWidth: 1,\n    marginBottom: 5\n  }\n\n  const hideWhenVisible = { display: visibility ? 'none': '' }\n  const showWhenVisibile = { display: visibility ? '' : 'none' }\n\n  // Allow blogs to be deleted only if blog post created by user\n  const showDeleteButton = (id) => {\n    const blog = blogs.find(blog => blog.id === id)\n\n    if (user.username === blog.user['username']) {\n      return (\n        <button onClick={() => deleteBlog(blog.id)}>Remove</button>\n      )\n    }\n  }\n\n  // const handleLikes = (id) => {\n  //   const likeBlog = blogs.find(blog => blog.id === id)\n  //   console.log('blog: ', likeBlog)\n  //   const updateLike = { ...likeBlog, likes: likeBlog.likes + 1 }\n  //   blogService\n  //     .update(id, updateLike)\n  //     .then(response =>\n  //       setBlogs(blogs.map(blog => blog.id !== id ? blog : response))\n  //     )\n  // }\n  const likeBlog = async (id) => {\n    const blog = blogs.find(blog => blog.id === id)\n\n    const likedBlog = {\n      title: blog.title,\n      likes: blog.likes + 1,\n      author: blog.author,\n      url: blog.url,\n      id: blog.id,\n      user: blog.user.id\n    }\n    console.log('liked blog: ', likedBlog)\n\n    try {\n      await blogService\n        .update(blog.id, likedBlog)\n      console.log('blog.id: ', blog.id)\n      setBlogs(blogs.map(blog => blog.id !== likedBlog.id ? blog : likedBlog))\n      console.log('likedBlog in try: ', likedBlog)\n      notify(`Like added to: ${blog.title}`, 'ok')\n    } catch (exception){\n      notify('Error!')\n    }\n  }\n\n  const toggle = () => {\n    setVisibility(!visibility)\n  }\n\n  return (\n    <div style={blogStyle}>\n      <div style={hideWhenVisible} className='blog'>\n        {blog.title}\n        {blog.author}\n        <button onClick={toggle}>view</button>\n      </div>\n      <div style={showWhenVisibile} className='blogView'>\n        {blog.title}\n        {blog.author}\n        <button onClick={toggle}>hide</button>\n        <br/>\n        {blog.url}\n        <br/>\n        {blog.likes}\n        <button onClick={likeBlog}>like</button>\n        <br/>\n        {blog.user.name}\n        <br/>\n        {showDeleteButton()}\n      </div>\n    </div>\n  )\n}\n\nexport default Blog\n"]},"metadata":{},"sourceType":"module"}