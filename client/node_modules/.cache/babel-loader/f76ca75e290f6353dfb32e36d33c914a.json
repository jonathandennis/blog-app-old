{"ast":null,"code":"var _jsxFileName = \"/Users/jonathandennis/MOOC_fullStack/part5/bloglist-frontend/src/components/Blog.js\";\nimport React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport blogService from '../services/blogs';\nimport { setNotification } from '../reducers/notificationReducer';\n\nconst Blog = ({\n  user,\n  setBlogs,\n  blog\n}) => {\n  const [visibility, setVisibility] = useState(false);\n  const blogs = useSelector(state => state.blogs);\n  const dispatch = useDispatch();\n  const blogStyle = {\n    paddingTop: 10,\n    paddingLeft: 2,\n    border: 'solid',\n    borderWidth: 1,\n    marginBottom: 5\n  };\n  const hideWhenVisible = {\n    display: visibility ? 'none' : ''\n  };\n  const showWhenVisibile = {\n    display: visibility ? '' : 'none'\n  }; // Allow blogs to be deleted only if blog post created by user\n\n  const showDeleteButton = () => {\n    if (user.username === blog.user['username']) {\n      return /*#__PURE__*/React.createElement(\"button\", {\n        onClick: () => toDeleteBlog(blog.id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 9\n        }\n      }, \"Remove\");\n    }\n  };\n\n  const toDeleteBlog = id => {\n    const toDelete = blogs.find(blog => blog.id === id);\n\n    if (window.confirm(`Remove: ${toDelete.title} By: ${toDelete.author}?`)) {\n      blogService.remove(id); //setBlogs(blogs.filter(blog => blog.id !== id))\n\n      dispatch(setNotification(`${toDelete.title} by ${toDelete.author} was successfully deleted!`, 5)); //notify(`${toDelete.title} by ${toDelete.author} was successfully deleted!`, 'ok')\n    }\n  };\n\n  const likeBlog = async () => {\n    const likedBlog = {\n      title: blog.title,\n      likes: blog.likes + 1,\n      author: blog.author,\n      url: blog.url,\n      id: blog.id,\n      user: blog.user\n    };\n\n    try {\n      await blogService.update(blog.id, likedBlog);\n      setBlogs(blogs.map(blog => blog.id !== likedBlog.id ? blog : likedBlog));\n      dispatch(setNotification(`Like added to: ${blog.title}`, 5)); //notify(`Like added to: ${blog.title}`, 'ok')\n    } catch (exception) {\n      dispatch(setNotification('Error!', 5)); //notify('Error!')\n    }\n  };\n\n  const toggle = () => {\n    setVisibility(!visibility);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: blogStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: hideWhenVisible,\n    className: \"blog\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, blog.title, blog.author, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, \"view\"))), /*#__PURE__*/React.createElement(\"div\", {\n    style: showWhenVisibile,\n    className: \"blogView\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, blog.title, blog.author, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, \"hide\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }), blog.url, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }), blog.likes, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: likeBlog,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, \"like\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }), blog.user.name, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }), showDeleteButton()));\n};\n\nexport default Blog;","map":{"version":3,"sources":["/Users/jonathandennis/MOOC_fullStack/part5/bloglist-frontend/src/components/Blog.js"],"names":["React","useState","useSelector","useDispatch","blogService","setNotification","Blog","user","setBlogs","blog","visibility","setVisibility","blogs","state","dispatch","blogStyle","paddingTop","paddingLeft","border","borderWidth","marginBottom","hideWhenVisible","display","showWhenVisibile","showDeleteButton","username","toDeleteBlog","id","toDelete","find","window","confirm","title","author","remove","likeBlog","likedBlog","likes","url","update","map","exception","toggle","name"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport blogService from '../services/blogs'\n\nimport { setNotification } from '../reducers/notificationReducer'\n\nconst Blog = ({ user, setBlogs, blog }) => {\n  const [ visibility, setVisibility ] = useState(false)\n\n  const blogs = useSelector(state => state.blogs)\n  const dispatch = useDispatch()\n\n  const blogStyle = {\n    paddingTop: 10,\n    paddingLeft: 2,\n    border: 'solid',\n    borderWidth: 1,\n    marginBottom: 5\n  }\n\n  const hideWhenVisible = { display: visibility ? 'none': '' }\n  const showWhenVisibile = { display: visibility ? '' : 'none' }\n\n  // Allow blogs to be deleted only if blog post created by user\n  const showDeleteButton = () => {\n\n    if (user.username === blog.user['username']) {\n      return (\n        <button onClick={() => toDeleteBlog(blog.id)}>Remove</button>\n      )\n    }\n  }\n\n  const toDeleteBlog = (id) => {\n    const toDelete = blogs.find(blog => blog.id === id)\n\n    if (window.confirm(`Remove: ${toDelete.title} By: ${toDelete.author}?`)) {\n\n      blogService\n        .remove(id)\n      //setBlogs(blogs.filter(blog => blog.id !== id))\n      dispatch(setNotification(`${toDelete.title} by ${toDelete.author} was successfully deleted!`, 5))\n      //notify(`${toDelete.title} by ${toDelete.author} was successfully deleted!`, 'ok')\n    }\n  }\n\n  const likeBlog = async () => {\n\n    const likedBlog = {\n      title: blog.title,\n      likes: blog.likes + 1,\n      author: blog.author,\n      url: blog.url, \n      id: blog.id,\n      user: blog.user\n    }\n\n    try {\n      await blogService\n        .update(blog.id, likedBlog)\n      setBlogs(blogs.map(blog => blog.id !== likedBlog.id ? blog : likedBlog))\n      dispatch(setNotification(`Like added to: ${blog.title}`, 5))\n      //notify(`Like added to: ${blog.title}`, 'ok')\n    } catch (exception){\n      dispatch(setNotification('Error!', 5))\n      //notify('Error!')\n    }\n  }\n\n  const toggle = () => {\n    setVisibility(!visibility)\n  }\n\n  return (\n    <div style={blogStyle}>\n      <div style={hideWhenVisible} className='blog'>\n        <li>\n          {blog.title}\n          {blog.author}\n          <button onClick={toggle}>view</button>\n        </li>\n      </div>\n      <div style={showWhenVisibile} className='blogView'>\n        {blog.title}\n        {blog.author}\n        <button onClick={toggle}>hide</button>\n        <br/>\n        {blog.url}\n        <br/>\n        {blog.likes}\n        <button onClick={likeBlog}>like</button>\n        <br/>\n        {blog.user.name}\n        <br/>\n        {showDeleteButton()}\n      </div>\n    </div>\n  )\n}\n\nexport default Blog\n"]},"metadata":{},"sourceType":"module"}