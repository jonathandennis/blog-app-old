{"ast":null,"code":"var _jsxFileName = \"/Users/jonathandennis/MOOC_fullStack/part5/bloglist-frontend/src/components/Blog.js\";\nimport React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport blogService from '../services/blogs';\n\nconst Blog = ({\n  user,\n  setBlogs,\n  blog,\n  notify,\n  deleteBlog\n}) => {\n  const blogs = useSelector(state => state);\n  const [visibility, setVisibility] = useState(false);\n  const blogStyle = {\n    paddingTop: 10,\n    paddingLeft: 2,\n    border: 'solid',\n    borderWidth: 1,\n    marginBottom: 5\n  };\n  const hideWhenVisible = {\n    display: visibility ? 'none' : ''\n  };\n  const showWhenVisibile = {\n    display: visibility ? '' : 'none'\n  }; // Allow blogs to be deleted only if blog post created by user\n\n  const showDeleteButton = () => {\n    if (user.username === blog.user['username']) {\n      return /*#__PURE__*/React.createElement(\"button\", {\n        onClick: () => deleteBlog(blog.id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 9\n        }\n      }, \"Remove\");\n    }\n  };\n\n  const likeBlog = async () => {\n    const likedBlog = {\n      title: blog.title,\n      likes: blog.likes + 1,\n      author: blog.author,\n      url: blog.url,\n      id: blog.id,\n      user: blog.user\n    };\n\n    try {\n      await blogService.update(blog.id, likedBlog);\n      setBlogs(blogs.map(blog => blog.id !== likedBlog.id ? blog : likedBlog));\n      notify(`Like added to: ${blog.title}`, 'ok');\n    } catch (exception) {//notify('Error!')\n    }\n  };\n\n  const toggle = () => {\n    setVisibility(!visibility);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: blogStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: hideWhenVisible,\n    className: \"blog\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, blog.title, blog.author, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }, \"view\"))), /*#__PURE__*/React.createElement(\"div\", {\n    style: showWhenVisibile,\n    className: \"blogView\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, blog.title, blog.author, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, \"hide\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }), blog.url, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }), blog.likes, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: likeBlog,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, \"like\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }), showDeleteButton()));\n};\n\nexport default Blog;","map":{"version":3,"sources":["/Users/jonathandennis/MOOC_fullStack/part5/bloglist-frontend/src/components/Blog.js"],"names":["React","useState","useSelector","blogService","Blog","user","setBlogs","blog","notify","deleteBlog","blogs","state","visibility","setVisibility","blogStyle","paddingTop","paddingLeft","border","borderWidth","marginBottom","hideWhenVisible","display","showWhenVisibile","showDeleteButton","username","id","likeBlog","likedBlog","title","likes","author","url","update","map","exception","toggle"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport blogService from '../services/blogs'\n\nconst Blog = ({ user, setBlogs, blog, notify, deleteBlog }) => {\n\n  const blogs = useSelector(state => state)\n\n  const [ visibility, setVisibility ] = useState(false)\n\n  const blogStyle = {\n    paddingTop: 10,\n    paddingLeft: 2,\n    border: 'solid',\n    borderWidth: 1,\n    marginBottom: 5\n  }\n\n  const hideWhenVisible = { display: visibility ? 'none': '' }\n  const showWhenVisibile = { display: visibility ? '' : 'none' }\n\n  // Allow blogs to be deleted only if blog post created by user\n  const showDeleteButton = () => {\n\n    if (user.username === blog.user['username']) {\n      return (\n        <button onClick={() => deleteBlog(blog.id)}>Remove</button>\n      )\n    }\n  }\n\n  const likeBlog = async () => {\n\n    const likedBlog = {\n      title: blog.title,\n      likes: blog.likes + 1,\n      author: blog.author,\n      url: blog.url,\n      id: blog.id,\n      user: blog.user\n    }\n\n    try {\n      await blogService\n        .update(blog.id, likedBlog)\n      setBlogs(blogs.map(blog => blog.id !== likedBlog.id ? blog : likedBlog))\n      notify(`Like added to: ${blog.title}`, 'ok')\n    } catch (exception){\n      //notify('Error!')\n    }\n  }\n\n  const toggle = () => {\n    setVisibility(!visibility)\n  }\n\n  return (\n    <div style={blogStyle}>\n      <div style={hideWhenVisible} className='blog'>\n        <li>\n          {blog.title}\n          {blog.author}\n          <button onClick={toggle}>view</button>\n        </li>\n      </div>\n      <div style={showWhenVisibile} className='blogView'>\n        {blog.title}\n        {blog.author}\n        <button onClick={toggle}>hide</button>\n        <br/>\n        {blog.url}\n        <br/>\n        {blog.likes}\n        <button onClick={likeBlog}>like</button>\n        <br/>\n        {/* {blog.user.name} */}\n        <br/>\n        {showDeleteButton()}\n      </div>\n    </div>\n  )\n}\n\nexport default Blog\n"]},"metadata":{},"sourceType":"module"}