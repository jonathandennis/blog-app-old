{"ast":null,"code":"import axios from 'axios';\nconst baseUrl = '/api/blogs';\nlet token = null;\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`;\n};\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then(response => response.data);\n};\n\nconst create = async (title, author, url) => {\n  const config = {\n    headers: {\n      Authorization: token\n    }\n  };\n  const object = {\n    title,\n    author,\n    url,\n    likes: 0\n  };\n  const response = await axios.post(baseUrl, object, config);\n  return response.data;\n};\n\nconst update = (id, newObject) => {\n  console.log('newObject in blogs services: ', newObject);\n  return axios.put(`${baseUrl}/${id}`, newObject);\n};\n\nconst updateComment = async (id, newObject) => {\n  const response = await axios.post(`${baseUrl}/${id}/comments`, newObject);\n  console.log('response.data in updateComment: ', response.data);\n  return response.data;\n};\n\nconst remove = async id => {\n  const config = {\n    headers: {\n      Authorization: token\n    }\n  };\n  const request = await axios.delete(`${baseUrl}/${id}`, config);\n  const response = await request.data;\n  return response;\n};\n\nexport default {\n  getAll,\n  create,\n  setToken,\n  update,\n  updateComment,\n  remove\n};","map":{"version":3,"sources":["/Users/jonathandennis/MOOC_fullStack/part5/bloglist-frontend/src/services/blogs.js"],"names":["axios","baseUrl","token","setToken","newToken","getAll","request","get","then","response","data","create","title","author","url","config","headers","Authorization","object","likes","post","update","id","newObject","console","log","put","updateComment","remove","delete"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,MAAMC,OAAO,GAAG,YAAhB;AAEA,IAAIC,KAAK,GAAG,IAAZ;;AAEA,MAAMC,QAAQ,GAAGC,QAAQ,IAAI;AAC3BF,EAAAA,KAAK,GAAI,UAASE,QAAS,EAA3B;AACD,CAFD;;AAIA,MAAMC,MAAM,GAAG,MAAM;AACnB,QAAMC,OAAO,GAAGN,KAAK,CAACO,GAAN,CAAUN,OAAV,CAAhB;AACA,SAAOK,OAAO,CAACE,IAAR,CAAaC,QAAQ,IAAIA,QAAQ,CAACC,IAAlC,CAAP;AACD,CAHD;;AAKA,MAAMC,MAAM,GAAI,OAAOC,KAAP,EAAcC,MAAd,EAAsBC,GAAtB,KAA8B;AAC5C,QAAMC,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE;AAAEC,MAAAA,aAAa,EAAEf;AAAjB;AADI,GAAf;AAGA,QAAMgB,MAAM,GAAG;AAAEN,IAAAA,KAAF;AAASC,IAAAA,MAAT;AAAiBC,IAAAA,GAAjB;AAAsBK,IAAAA,KAAK,EAAE;AAA7B,GAAf;AAEA,QAAMV,QAAQ,GAAG,MAAMT,KAAK,CAACoB,IAAN,CAAWnB,OAAX,EAAoBiB,MAApB,EAA4BH,MAA5B,CAAvB;AACA,SAAON,QAAQ,CAACC,IAAhB;AACD,CARD;;AAUA,MAAMW,MAAM,GAAG,CAACC,EAAD,EAAKC,SAAL,KAAmB;AAChCC,EAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ,EAA6CF,SAA7C;AACA,SAAOvB,KAAK,CAAC0B,GAAN,CAAW,GAAEzB,OAAQ,IAAGqB,EAAG,EAA3B,EAA8BC,SAA9B,CAAP;AACD,CAHD;;AAKA,MAAMI,aAAa,GAAG,OAAOL,EAAP,EAAWC,SAAX,KAAyB;AAC7C,QAAMd,QAAQ,GAAG,MAAMT,KAAK,CAACoB,IAAN,CAAY,GAAEnB,OAAQ,IAAGqB,EAAG,WAA5B,EAAwCC,SAAxC,CAAvB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ,EAAgDhB,QAAQ,CAACC,IAAzD;AACA,SAAOD,QAAQ,CAACC,IAAhB;AACD,CAJD;;AAMA,MAAMkB,MAAM,GAAG,MAAON,EAAP,IAAc;AAE3B,QAAMP,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE;AAAEC,MAAAA,aAAa,EAAEf;AAAjB;AADI,GAAf;AAGA,QAAMI,OAAO,GAAG,MAAMN,KAAK,CAAC6B,MAAN,CAAc,GAAE5B,OAAQ,IAAGqB,EAAG,EAA9B,EAAiCP,MAAjC,CAAtB;AACA,QAAMN,QAAQ,GAAG,MAAMH,OAAO,CAACI,IAA/B;AACA,SAAOD,QAAP;AACD,CARD;;AAUA,eAAe;AAAEJ,EAAAA,MAAF;AAAUM,EAAAA,MAAV;AAAkBR,EAAAA,QAAlB;AAA4BkB,EAAAA,MAA5B;AAAoCM,EAAAA,aAApC;AAAmDC,EAAAA;AAAnD,CAAf","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/blogs'\n\nlet token = null\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`\n}\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create =  async (title, author, url) => {\n  const config = {\n    headers: { Authorization: token },\n  }\n  const object = { title, author, url, likes: 0 }\n\n  const response = await axios.post(baseUrl, object, config)\n  return response.data\n}\n\nconst update = (id, newObject) => {\n  console.log('newObject in blogs services: ', newObject)\n  return axios.put(`${baseUrl}/${id}`, newObject)\n}\n\nconst updateComment = async (id, newObject) => {\n  const response = await axios.post(`${baseUrl}/${id}/comments`, newObject)\n  console.log('response.data in updateComment: ', response.data)\n  return response.data\n}\n\nconst remove = async (id) => {\n\n  const config = {\n    headers: { Authorization: token },\n  }\n  const request = await axios.delete(`${baseUrl}/${id}`, config)\n  const response = await request.data\n  return response\n}\n\nexport default { getAll, create, setToken, update, updateComment, remove }"]},"metadata":{},"sourceType":"module"}