{"ast":null,"code":"var _jsxFileName = \"/Users/jonathandennis/MOOC_fullStack/part5/bloglist-frontend/src/components/Blog.js\";\nimport React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { deleteBlog, likeBlog } from '../reducers/blogReducer';\nimport { setNotification } from '../reducers/notificationReducer';\n\nconst Blog = ({\n  loggedUser,\n  blog\n}) => {\n  console.log('blog in Blog: ', blog); //const [ visibility, setVisibility ] = useState(false)\n  //const blogs = useSelector(state => state.blogs)\n\n  const dispatch = useDispatch();\n  /* const blogStyle = {\n    paddingTop: 10,\n    paddingLeft: 2,\n    border: 'solid',\n    borderWidth: 1,\n    marginBottom: 5\n  } */\n\n  /* const hideWhenVisible = { display: visibility ? 'none': '' }\n  const showWhenVisibile = { display: visibility ? '' : 'none' } */\n  // Allow blogs to be deleted only if blog post created by user\n\n  const showDeleteButton = () => {\n    if (loggedUser.username === blog.user['username']) {\n      return /*#__PURE__*/React.createElement(\"button\", {\n        onClick: () => handleDeleteBlog(blog.id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 9\n        }\n      }, \"Remove\");\n    }\n  };\n\n  const handleDeleteBlog = id => {\n    //const toDelete = blogs.find(blog => blog.id === id)\n    const toDelete = blog;\n\n    if (window.confirm(`Remove: ${toDelete.title} By: ${toDelete.author}?`)) {\n      dispatch(deleteBlog(id));\n      dispatch(setNotification(`${toDelete.title} by ${toDelete.author} was successfully deleted!`, 5)); //notify(`${toDelete.title} by ${toDelete.author} was successfully deleted!`, 'ok')\n    }\n  };\n\n  const handleLike = async () => {\n    console.log('blog in handleLike: ', blog);\n\n    try {\n      dispatch(likeBlog(blog));\n      dispatch(setNotification(`Like added to: ${blog.title}`, 5)); //notify(`Like added to: ${blog.title}`, 'ok')\n    } catch (exception) {\n      dispatch(setNotification('Error!', 5)); //notify('Error!')\n    }\n  }; // const toggle = () => {\n  //   setVisibility(!visibility)\n  // }\n\n\n  if (!blog) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, blog.title, \" \", blog.author));\n  /* return (\n    <div style={blogStyle}>\n      <div style={hideWhenVisible} className='blog'>\n        {blog.title} {blog.author}\n        <button onClick={toggle}>view</button>\n       </div>\n      <div style={showWhenVisibile} className='blogView'>\n        {blog.title} {blog.author}\n        <button onClick={toggle}>hide</button>\n        <br/>\n        {blog.url}\n        <br/>\n        {blog.likes}\n        <button onClick={handleLike}>like</button>\n        <br/>\n        {blog.user.name}\n        <br/>\n        {showDeleteButton()}\n      </div>\n    </div>\n  ) */\n};\n\nexport default Blog;","map":{"version":3,"sources":["/Users/jonathandennis/MOOC_fullStack/part5/bloglist-frontend/src/components/Blog.js"],"names":["React","useSelector","useDispatch","deleteBlog","likeBlog","setNotification","Blog","loggedUser","blog","console","log","dispatch","showDeleteButton","username","user","handleDeleteBlog","id","toDelete","window","confirm","title","author","handleLike","exception"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,SAASC,UAAT,EAAqBC,QAArB,QAAqC,yBAArC;AACA,SAASC,eAAT,QAAgC,iCAAhC;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA,UAAF;AAAcC,EAAAA;AAAd,CAAD,KAA0B;AACrCC,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BF,IAA9B,EADqC,CAErC;AAEA;;AACA,QAAMG,QAAQ,GAAGT,WAAW,EAA5B;AAEA;;;;;;;;AAQA;;AAGA;;AACA,QAAMU,gBAAgB,GAAG,MAAM;AAE7B,QAAIL,UAAU,CAACM,QAAX,KAAwBL,IAAI,CAACM,IAAL,CAAU,UAAV,CAA5B,EAAmD;AACjD,0BACE;AAAQ,QAAA,OAAO,EAAE,MAAMC,gBAAgB,CAACP,IAAI,CAACQ,EAAN,CAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF;AAGD;AACF,GAPD;;AASA,QAAMD,gBAAgB,GAAIC,EAAD,IAAQ;AAC/B;AACA,UAAMC,QAAQ,GAAGT,IAAjB;;AAEA,QAAIU,MAAM,CAACC,OAAP,CAAgB,WAAUF,QAAQ,CAACG,KAAM,QAAOH,QAAQ,CAACI,MAAO,GAAhE,CAAJ,EAAyE;AAEvEV,MAAAA,QAAQ,CAACR,UAAU,CAACa,EAAD,CAAX,CAAR;AACAL,MAAAA,QAAQ,CAACN,eAAe,CAAE,GAAEY,QAAQ,CAACG,KAAM,OAAMH,QAAQ,CAACI,MAAO,4BAAzC,EAAsE,CAAtE,CAAhB,CAAR,CAHuE,CAIvE;AACD;AACF,GAVD;;AAYA,QAAMC,UAAU,GAAG,YAAY;AAC7Bb,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCF,IAApC;;AAEA,QAAI;AACFG,MAAAA,QAAQ,CAACP,QAAQ,CAACI,IAAD,CAAT,CAAR;AACAG,MAAAA,QAAQ,CAACN,eAAe,CAAE,kBAAiBG,IAAI,CAACY,KAAM,EAA9B,EAAiC,CAAjC,CAAhB,CAAR,CAFE,CAGF;AACD,KAJD,CAIE,OAAOG,SAAP,EAAiB;AACjBZ,MAAAA,QAAQ,CAACN,eAAe,CAAC,QAAD,EAAW,CAAX,CAAhB,CAAR,CADiB,CAEjB;AACD;AACF,GAXD,CAxCqC,CAqDrC;AACA;AACA;;;AAEA,MAAI,CAACG,IAAL,EAAW;AACT,WAAO,IAAP;AACD;;AAED,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,IAAI,CAACY,KAAV,OAAkBZ,IAAI,CAACa,MAAvB,CADF,CADF;AAKA;;;;;;;;;;;;;;;;;;;;;AAsBD,CAxFD;;AA0FA,eAAef,IAAf","sourcesContent":["import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport { deleteBlog, likeBlog } from '../reducers/blogReducer'\nimport { setNotification } from '../reducers/notificationReducer'\n\nconst Blog = ({ loggedUser, blog }) => {\n  console.log('blog in Blog: ', blog)\n  //const [ visibility, setVisibility ] = useState(false)\n\n  //const blogs = useSelector(state => state.blogs)\n  const dispatch = useDispatch()\n\n  /* const blogStyle = {\n    paddingTop: 10,\n    paddingLeft: 2,\n    border: 'solid',\n    borderWidth: 1,\n    marginBottom: 5\n  } */\n\n  /* const hideWhenVisible = { display: visibility ? 'none': '' }\n  const showWhenVisibile = { display: visibility ? '' : 'none' } */\n\n  // Allow blogs to be deleted only if blog post created by user\n  const showDeleteButton = () => {\n\n    if (loggedUser.username === blog.user['username']) {\n      return (\n        <button onClick={() => handleDeleteBlog(blog.id)}>Remove</button>\n      )\n    }\n  }\n\n  const handleDeleteBlog = (id) => {\n    //const toDelete = blogs.find(blog => blog.id === id)\n    const toDelete = blog\n\n    if (window.confirm(`Remove: ${toDelete.title} By: ${toDelete.author}?`)) {\n\n      dispatch(deleteBlog(id))\n      dispatch(setNotification(`${toDelete.title} by ${toDelete.author} was successfully deleted!`, 5))\n      //notify(`${toDelete.title} by ${toDelete.author} was successfully deleted!`, 'ok')\n    }\n  }\n\n  const handleLike = async () => {\n    console.log('blog in handleLike: ', blog)\n\n    try {\n      dispatch(likeBlog(blog))\n      dispatch(setNotification(`Like added to: ${blog.title}`, 5))\n      //notify(`Like added to: ${blog.title}`, 'ok')\n    } catch (exception){\n      dispatch(setNotification('Error!', 5))\n      //notify('Error!')\n    }\n  }\n\n  // const toggle = () => {\n  //   setVisibility(!visibility)\n  // }\n\n  if (!blog) {\n    return null\n  }\n\n  return(\n    <div>\n      <h2>{blog.title} {blog.author}</h2>\n    </div>\n  )\n  /* return (\n    <div style={blogStyle}>\n      <div style={hideWhenVisible} className='blog'>\n        {blog.title} {blog.author}\n        <button onClick={toggle}>view</button>\n\n      </div>\n      <div style={showWhenVisibile} className='blogView'>\n        {blog.title} {blog.author}\n        <button onClick={toggle}>hide</button>\n        <br/>\n        {blog.url}\n        <br/>\n        {blog.likes}\n        <button onClick={handleLike}>like</button>\n        <br/>\n        {blog.user.name}\n        <br/>\n        {showDeleteButton()}\n      </div>\n    </div>\n  ) */\n}\n\nexport default Blog\n"]},"metadata":{},"sourceType":"module"}