{"ast":null,"code":"import blogService from '../services/blogs';\n\nconst blogReducer = (state = [], action) => {\n  console.log('state now: ', state);\n  console.log('action now: ', action);\n\n  switch (action.type) {\n    case 'INIT_BLOGS':\n      return action.data;\n\n    case 'NEW_BLOG':\n      return [...state, action.data];\n\n    case 'DELETE_BLOG':\n      {\n        const id = action.data.id;\n        return state.remove(blog => blog.id === id);\n      }\n\n    case 'LIKE_BLOG':\n      {\n        console.log('state in LIKE_BLOG: ', state);\n        console.log('action.data.data in LIKE_BLOG', action.data);\n        const id = action.data.id;\n        return state.map(blog => blog.id !== id ? blog : action.data);\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport const initializeBlogs = () => {\n  return async dispatch => {\n    const blogs = await blogService.getAll();\n    dispatch({\n      type: 'INIT_BLOGS',\n      data: blogs\n    });\n  };\n};\nexport const createBlog = (title, author, url) => {\n  return async dispatch => {\n    const newBlog = await blogService.create(title, author, url);\n    console.log('newBlog in createBlog: ', newBlog);\n    dispatch({\n      type: 'NEW_BLOG',\n      data: newBlog\n    });\n  };\n};\nexport const likeBlog = blog => {\n  const changedBlog = { ...blog,\n    likes: blog.likes + 1\n  };\n  return async dispatch => {\n    const newObject = await blogService.update(blog.id, changedBlog);\n    dispatch({\n      type: 'LIKE_BLOG',\n      data: newObject\n    });\n  };\n};\nexport const deleteBlog = id => {\n  return async dispatch => {\n    //const toDelete = await blogs.find(blog => blog.id === id)\n    console.log('blog to delete: ', id);\n    dispatch({\n      type: 'DELETE_BLOG',\n      data: id\n    });\n  };\n};\nexport default blogReducer;","map":{"version":3,"sources":["/Users/jonathandennis/MOOC_fullStack/part5/bloglist-frontend/src/reducers/blogReducer.js"],"names":["blogService","blogReducer","state","action","console","log","type","data","id","remove","blog","map","initializeBlogs","dispatch","blogs","getAll","createBlog","title","author","url","newBlog","create","likeBlog","changedBlog","likes","newObject","update","deleteBlog"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,mBAAxB;;AAEA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAwB;AAC1CC,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BH,KAA3B;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BF,MAA5B;;AACA,UAAQA,MAAM,CAACG,IAAf;AACA,SAAK,YAAL;AACE,aAAOH,MAAM,CAACI,IAAd;;AACF,SAAK,UAAL;AACE,aAAO,CAAC,GAAGL,KAAJ,EAAWC,MAAM,CAACI,IAAlB,CAAP;;AACF,SAAK,aAAL;AAAoB;AAClB,cAAMC,EAAE,GAAGL,MAAM,CAACI,IAAP,CAAYC,EAAvB;AACA,eAAON,KAAK,CAACO,MAAN,CAAaC,IAAI,IACtBA,IAAI,CAACF,EAAL,KAAYA,EADP,CAAP;AAED;;AACD,SAAK,WAAL;AAAkB;AAChBJ,QAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCH,KAApC;AACAE,QAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ,EAA6CF,MAAM,CAACI,IAApD;AACA,cAAMC,EAAE,GAAGL,MAAM,CAACI,IAAP,CAAYC,EAAvB;AACA,eAAON,KAAK,CAACS,GAAN,CAAUD,IAAI,IAAIA,IAAI,CAACF,EAAL,KAAYA,EAAZ,GAAiBE,IAAjB,GAAwBP,MAAM,CAACI,IAAjD,CAAP;AACD;;AAED;AACE,aAAOL,KAAP;AAlBF;AAoBD,CAvBD;;AAyBA,OAAO,MAAMU,eAAe,GAAG,MAAM;AACnC,SAAO,MAAMC,QAAN,IAAkB;AACvB,UAAMC,KAAK,GAAG,MAAMd,WAAW,CAACe,MAAZ,EAApB;AACAF,IAAAA,QAAQ,CAAC;AACPP,MAAAA,IAAI,EAAE,YADC;AAEPC,MAAAA,IAAI,EAAEO;AAFC,KAAD,CAAR;AAID,GAND;AAOD,CARM;AAUP,OAAO,MAAME,UAAU,GAAG,CAACC,KAAD,EAAQC,MAAR,EAAgBC,GAAhB,KAAwB;AAChD,SAAO,MAAMN,QAAN,IAAkB;AACvB,UAAMO,OAAO,GAAG,MAAMpB,WAAW,CAACqB,MAAZ,CAAmBJ,KAAnB,EAA0BC,MAA1B,EAAkCC,GAAlC,CAAtB;AACAf,IAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCe,OAAvC;AACAP,IAAAA,QAAQ,CAAC;AACPP,MAAAA,IAAI,EAAE,UADC;AAEPC,MAAAA,IAAI,EAAEa;AAFC,KAAD,CAAR;AAID,GAPD;AAQD,CATM;AAWP,OAAO,MAAME,QAAQ,GAAIZ,IAAD,IAAU;AAChC,QAAMa,WAAW,GAAG,EAClB,GAAGb,IADe;AAElBc,IAAAA,KAAK,EAAEd,IAAI,CAACc,KAAL,GAAa;AAFF,GAApB;AAIA,SAAO,MAAMX,QAAN,IAAkB;AACvB,UAAMY,SAAS,GAAG,MAAMzB,WAAW,CAAC0B,MAAZ,CAAmBhB,IAAI,CAACF,EAAxB,EAA4Be,WAA5B,CAAxB;AACAV,IAAAA,QAAQ,CAAC;AACPP,MAAAA,IAAI,EAAE,WADC;AAEPC,MAAAA,IAAI,EAAEkB;AAFC,KAAD,CAAR;AAID,GAND;AAOD,CAZM;AAcP,OAAO,MAAME,UAAU,GAAInB,EAAD,IAAQ;AAChC,SAAO,MAAMK,QAAN,IAAkB;AACvB;AACAT,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCG,EAAhC;AACAK,IAAAA,QAAQ,CAAC;AACPP,MAAAA,IAAI,EAAE,aADC;AAEPC,MAAAA,IAAI,EAAEC;AAFC,KAAD,CAAR;AAID,GAPD;AAQD,CATM;AAWP,eAAeP,WAAf","sourcesContent":["import blogService from '../services/blogs'\n\nconst blogReducer = (state = [], action) => {\n  console.log('state now: ', state)\n  console.log('action now: ', action)\n  switch (action.type) {\n  case 'INIT_BLOGS':\n    return action.data\n  case 'NEW_BLOG':\n    return [...state, action.data]\n  case 'DELETE_BLOG': {\n    const id = action.data.id\n    return state.remove(blog =>\n      blog.id === id)\n  }\n  case 'LIKE_BLOG': {\n    console.log('state in LIKE_BLOG: ', state)\n    console.log('action.data.data in LIKE_BLOG', action.data)\n    const id = action.data.id\n    return state.map(blog => blog.id !== id ? blog : action.data)\n  }\n\n  default:\n    return state\n  }\n}\n\nexport const initializeBlogs = () => {\n  return async dispatch => {\n    const blogs = await blogService.getAll()\n    dispatch({\n      type: 'INIT_BLOGS',\n      data: blogs,\n    })\n  }\n}\n\nexport const createBlog = (title, author, url) => {\n  return async dispatch => {\n    const newBlog = await blogService.create(title, author, url)\n    console.log('newBlog in createBlog: ', newBlog)\n    dispatch({\n      type: 'NEW_BLOG',\n      data: newBlog,\n    })\n  }\n}\n\nexport const likeBlog = (blog) => {\n  const changedBlog = {\n    ...blog,\n    likes: blog.likes + 1\n  }\n  return async dispatch => {\n    const newObject = await blogService.update(blog.id, changedBlog)\n    dispatch({\n      type: 'LIKE_BLOG',\n      data: newObject\n    })\n  }\n}\n\nexport const deleteBlog = (id) => {\n  return async dispatch => {\n    //const toDelete = await blogs.find(blog => blog.id === id)\n    console.log('blog to delete: ', id)\n    dispatch({\n      type: 'DELETE_BLOG',\n      data: id,\n    })\n  }\n}\n\nexport default blogReducer"]},"metadata":{},"sourceType":"module"}