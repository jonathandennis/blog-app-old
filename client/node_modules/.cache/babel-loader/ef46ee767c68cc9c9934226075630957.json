{"ast":null,"code":"import blogService from '../services/blogs';\n\nconst blogReducer = (state = [], action) => {\n  console.log('state now: ', state);\n  console.log('action now: ', action);\n\n  switch (action.type) {\n    case 'INIT_BLOGS':\n      return action.data;\n\n    case 'NEW_BLOG':\n      console.log('action.data in NEW_BLOG: ', action.data);\n      return [...state, action.data];\n\n    case 'DELETE_BLOG':\n      {\n        return state.filter(blog => blog.id !== action.data);\n      }\n\n    case 'LIKE_BLOG':\n      {\n        const id = action.data.data.id;\n        return state.map(blog => blog.id !== id ? blog : action.data.data);\n      }\n\n    case 'NEW_COMMENT':\n      {\n        const id = action.id;\n        const comment = action.data;\n        return state.map(blog => blog.id !== id ? blog : { ...blog,\n          comments: [...blog.comments, comment]\n        });\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport const initializeBlogs = () => {\n  return async dispatch => {\n    const blogs = await blogService.getAll();\n    dispatch({\n      type: 'INIT_BLOGS',\n      data: blogs\n    });\n  };\n};\nexport const createBlog = (title, author, url, user) => {\n  return async dispatch => {\n    const newBlog = await blogService.create(title, author, url, user);\n    dispatch({\n      type: 'NEW_BLOG',\n      data: newBlog\n    });\n  };\n};\nexport const likeBlog = blog => {\n  const changedBlog = { ...blog,\n    likes: blog.likes + 1\n  };\n  return async dispatch => {\n    const newObject = await blogService.update(blog.id, changedBlog);\n    dispatch({\n      type: 'LIKE_BLOG',\n      data: newObject\n    });\n  };\n};\nexport const addComment = (id, comment) => {\n  return async dispatch => {\n    const newComment = await blogService.addComment(id, comment);\n    dispatch({\n      type: 'NEW_COMMENT',\n      data: newComment,\n      id\n    });\n  };\n};\nexport const deleteBlog = id => {\n  return async dispatch => {\n    await blogService.remove(id);\n    console.log('blog to delete: ', id);\n    dispatch({\n      type: 'DELETE_BLOG',\n      data: id\n    });\n  };\n};\nexport default blogReducer;","map":{"version":3,"sources":["/Users/jonathandennis/MOOC_fullStack/part5/bloglist-frontend/src/reducers/blogReducer.js"],"names":["blogService","blogReducer","state","action","console","log","type","data","filter","blog","id","map","comment","comments","initializeBlogs","dispatch","blogs","getAll","createBlog","title","author","url","user","newBlog","create","likeBlog","changedBlog","likes","newObject","update","addComment","newComment","deleteBlog","remove"],"mappings":"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","sourcesContent":["import blogService from '../services/blogs'\n\nconst blogReducer = (state = [], action) => {\n  console.log('state now: ', state)\n  console.log('action now: ', action)\n  switch (action.type) {\n  case 'INIT_BLOGS':\n    return action.data\n  case 'NEW_BLOG':\n    console.log('action.data in NEW_BLOG: ', action.data)\n    return [...state, action.data]\n  case 'DELETE_BLOG': {\n    return state.filter(blog => blog.id !== action.data)\n  }\n  case 'LIKE_BLOG': {\n    const id = action.data.data.id\n    return state.map(blog => blog.id !== id ? blog : action.data.data)\n  }\n  case 'NEW_COMMENT': {\n    const id = action.id\n    const comment = action.data\n\n    return state.map(blog => blog.id !== id ? blog : {\n      ...blog,\n      comments: [...blog.comments, comment]\n    })\n  }\n\n  default:\n    return state\n  }\n}\n\nexport const initializeBlogs = () => {\n  return async dispatch => {\n    const blogs = await blogService.getAll()\n    dispatch({\n      type: 'INIT_BLOGS',\n      data: blogs,\n    })\n  }\n}\n\nexport const createBlog = (title, author, url, user) => {\n  return async dispatch => {\n    const newBlog = await blogService.create(title, author, url, user)\n    dispatch({\n      type: 'NEW_BLOG',\n      data: newBlog,\n    })\n  }\n}\n\nexport const likeBlog = (blog) => {\n  const changedBlog = {\n    ...blog,\n    likes: blog.likes + 1\n  }\n  return async dispatch => {\n    const newObject = await blogService.update(blog.id, changedBlog)\n    dispatch({\n      type: 'LIKE_BLOG',\n      data: newObject\n    })\n  }\n}\n\nexport const addComment = (id, comment) => {\n  return async dispatch => {\n    const newComment = await blogService.addComment(id, comment)\n    dispatch({\n      type: 'NEW_COMMENT',\n      data: newComment, id\n    })\n  }\n}\n\nexport const deleteBlog = (id) => {\n  return async dispatch => {\n    await blogService.remove(id)\n    console.log('blog to delete: ', id)\n    dispatch({\n      type: 'DELETE_BLOG',\n      data: id,\n    })\n  }\n}\n\nexport default blogReducer"]},"metadata":{},"sourceType":"module"}