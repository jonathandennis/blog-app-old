{"version":3,"sources":["fonts/Lato-Regular.ttf","fonts/Lato-Italic.ttf","reducers/notificationReducer.js","services/blogs.js","reducers/blogReducer.js","reducers/loggedUserReducer.js","services/users.js","reducers/usersReducer.js","store.js","components/Blog.js","components/BlogList.js","components/Notification.js","components/Togglable.js","components/BlogForm.js","components/LoginForm.js","components/UserList.js","components/User.js","components/Footer.js","services/login.js","App.js","index.js"],"names":["module","exports","timeoutID","baseUrl","token","getAll","axios","get","then","response","data","create","title","author","url","a","config","headers","Authorization","object","likes","post","setToken","newToken","update","id","newObject","put","addComment","comment","remove","delete","request","setNotification","message","type","console","log","dispatch","clearTimeout","setTimeout","notificationReducer","state","action","createBlog","blogService","newBlog","likeBlog","blog","changedBlog","newComment","blogReducer","filter","map","comments","setLoggedUser","loggedUserJSON","window","localStorage","getItem","loggedUser","JSON","parse","loggedUserReducer","usersReducer","reducer","combineReducers","blogs","notifications","users","store","createStore","composeWithDevTools","applyMiddleware","thunk","Blog","useDispatch","history","useHistory","handleDeleteBlog","confirm","deleteBlog","push","exception","handleLike","handleComment","event","preventDefault","target","value","className","href","onClick","user","name","onSubmit","key","username","showDeleteButton","BlogList","sort","b1","b2","to","Notification","notification","useSelector","style","color","Togglable","React","forwardRef","props","ref","useState","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","useImperativeHandle","buttonLabel","children","displayName","BlogForm","blogFormRef","useRef","addBlog","current","buttonBorderRadius","LoginForm","handleSubmit","password","handleUsernameChange","handlePasswordChange","onChange","UserList","fontSize","paddingLeft","length","User","Footer","fontStyle","login","credentials","App","setUsername","setPassword","useEffect","initializeLoggedUser","usersService","handleLogin","loginService","setItem","stringify","handleLogout","removeItem","matchBlogs","useRouteMatch","find","String","params","matchUsers","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3a0e8421.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Lato-Regular.2d36b1a9.ttf\";","module.exports = __webpack_public_path__ + \"static/media/Lato-Italic.7582e823.ttf\";","const notificationReducer = (state = null, action) => {\n  switch (action.type) {\n  case 'NOTIFY':\n    return action.data\n  case 'CLEAR_NOTIFICATION':\n    return state = null\n\n  default:\n    return state\n  }\n}\n\nexport const clearNotification = () => {\n  return {\n    type: 'CLEAR_NOTIFICATION'\n  }\n}\n\nlet timeoutID\n\nexport const setNotification = (message, type='error') => {\n  console.log('timeoutID: ', timeoutID)\n\n  return async (dispatch) => {\n    dispatch({\n      type: 'NOTIFY',\n      data: { message, type },\n    })\n\n    if (timeoutID) {\n      clearTimeout(timeoutID)\n    }\n\n    timeoutID = setTimeout(() => {\n      dispatch(clearNotification())\n    }, 5000)\n  }\n}\n\nexport default notificationReducer","import axios from 'axios'\nconst baseUrl = '/api/blogs'\n\nlet token = null\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`\n}\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create =  async (title, author, url) => {\n  const config = {\n    headers: { Authorization: token },\n  }\n  const object = { title, author, url, likes: 0 }\n\n  const response = await axios.post(baseUrl, object, config)\n  return response.data\n}\n\nconst update = (id, newObject) => {\n  return axios.put(`${baseUrl}/${id}`, newObject)\n}\n\nconst addComment = async (id, comment) => {\n  const object = { comment }\n  const response = await axios.post(`${baseUrl}/${id}/comments`, object)\n  return response.data\n}\n\nconst remove = async (id) => {\n\n  const config = {\n    headers: { Authorization: token },\n  }\n  const request = await axios.delete(`${baseUrl}/${id}`, config)\n  const response = await request.data\n  return response\n}\n\nexport default { getAll, create, setToken, update, addComment, remove }","import blogService from '../services/blogs'\nimport { setNotification } from './notificationReducer'\n\nconst blogReducer = (state = [], action) => {\n  console.log('state now: ', state)\n  console.log('action now: ', action)\n  switch (action.type) {\n  case 'INIT_BLOGS':\n    return action.data\n  case 'NEW_BLOG':\n    return [...state, action.data]\n  case 'DELETE_BLOG': {\n    return state.filter(blog => blog.id !== action.data)\n  }\n  case 'LIKE_BLOG': {\n    const id = action.data.data.id\n    return state.map(blog => blog.id !== id ? blog : action.data.data)\n  }\n  case 'NEW_COMMENT': {\n    const id = action.id\n    const comment = action.data\n    return state.map(blog => blog.id !== id ? blog : {\n      ...blog,\n      comments: [...blog.comments, comment]\n    })\n  }\n\n  default:\n    return state\n  }\n}\n\nexport const initializeBlogs = () => {\n  return async dispatch => {\n    try {\n      const blogs = await blogService.getAll()\n      dispatch({\n        type: 'INIT_BLOGS',\n        data: blogs,\n      })\n    } catch(exception){\n      dispatch(setNotification('Error getting blogs!'))\n    }\n  }\n}\n\nexport const createBlog = (title, author, url) => {\n  return async dispatch => {\n    try {\n      const newBlog = await blogService.create(title, author, url)\n      dispatch({\n        type: 'NEW_BLOG',\n        data: newBlog,\n      })\n    } catch(exception){\n      dispatch(setNotification('Error adding blog, missing content!'))\n    }\n  }\n}\n\nexport const likeBlog = (blog) => {\n  const changedBlog = {\n    ...blog,\n    likes: blog.likes + 1\n  }\n  return async dispatch => {\n    try {\n      const newObject = await blogService.update(blog.id, changedBlog)\n      dispatch({\n        type: 'LIKE_BLOG',\n        data: newObject\n      })\n    } catch(exception){\n      dispatch(setNotification('Error liking blog!'))\n    }\n  }\n}\n\nexport const addComment = (id, comment) => {\n  return async dispatch => {\n    try {\n      const newComment = await blogService.addComment(id, comment)\n      dispatch({\n        type: 'NEW_COMMENT',\n        data: newComment, id\n      })\n    } catch(exception){\n      dispatch(setNotification('Error, Requires content!'))\n    }\n  }\n}\n\nexport const deleteBlog = (id) => {\n  return async dispatch => {\n    try {\n      await blogService.remove(id)\n      console.log('blog to delete: ', id)\n      dispatch({\n        type: 'DELETE_BLOG',\n        data: id,\n      })\n    } catch(exception){\n      dispatch(setNotification('Error deleting blog!'))\n    }\n  }\n}\n\nexport default blogReducer","import blogService from '../services/blogs'\n\nconst loggedUserReducer = (state = null, action) => {\n  switch (action.type) {\n  case 'INIT_LOGGEDUSER':\n    return action.data\n  case 'SET_LOGGEDUSER':\n    return action.data\n  case 'SET_LOGGEDUSERNULL':\n    return action.data\n\n  default:\n    return state\n  }\n}\n\nexport const initializeLoggedUser = () => {\n  const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser')\n  return async dispatch => {\n    if (loggedUserJSON) {\n      const loggedUser = JSON.parse(loggedUserJSON)\n      blogService.setToken(loggedUser.token)\n      dispatch({\n        type: 'INIT_LOGGEDUSER',\n        data: loggedUser,\n      })\n    }\n  }\n}\n\nexport const setLoggedUser = () => {\n  const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser')\n  return async dispatch => {\n    const loggedUser = JSON.parse(loggedUserJSON)\n    blogService.setToken(loggedUser.token)\n    dispatch({\n      type: 'SET_LOGGEDUSER',\n      data: loggedUser,\n    })\n  }\n}\n\nexport const setLoggedUserNull = () => {\n  return async dispatch => {\n    dispatch({\n      type: 'SET_LOGGEDUSERNULL',\n      data: null\n    })\n  }\n}\n\nexport default loggedUserReducer","import axios from 'axios'\nconst baseUrl = '/api/users'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nexport default { getAll }","import usersService from '../services/users'\n\nconst usersReducer = (state = [], action) => {\n  switch (action.type) {\n  case 'INIT_USERS':\n    return action.data\n\n  default:\n    return state\n  }\n}\n\nexport const initializeUsers = () => {\n  return async dispatch => {\n    const users = await usersService.getAll()\n    dispatch({\n      type: 'INIT_USERS',\n      data: users,\n    })\n  }\n}\n\nexport default usersReducer","import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\nimport blogReducer from './reducers/blogReducer'\nimport notificationReducer from './reducers/notificationReducer'\nimport loggedUserReducer from './reducers/loggedUserReducer'\nimport usersReducer from './reducers/usersReducer'\n\nconst reducer = combineReducers({\n  blogs: blogReducer,\n  notifications: notificationReducer,\n  loggedUser: loggedUserReducer,\n  users: usersReducer\n})\n\nconst store = createStore(\n  reducer,\n  composeWithDevTools(\n    applyMiddleware(thunk)\n  )\n)\n\nexport default store","import React from 'react'\nimport { useDispatch } from 'react-redux'\n\nimport { likeBlog, deleteBlog, addComment } from '../reducers/blogReducer'\nimport { setNotification } from '../reducers/notificationReducer'\n\nimport { useHistory } from 'react-router-dom'\n\nconst Blog = ({ blog, loggedUser }) => {\n\n  const dispatch = useDispatch()\n  const history = useHistory()\n\n  // Allow blogs to be deleted only if blog post created by user\n  const showDeleteButton = () => {\n\n    if (loggedUser.username === blog.user['username']) {\n      return (\n        <button onClick={() => handleDeleteBlog(blog.id)}>Remove Blog</button>\n      )\n    }\n  }\n\n  const handleDeleteBlog = (id) => {\n    if (window.confirm(`Remove: ${blog.title} By: ${blog.author}?`))\n      try {\n        dispatch(deleteBlog(id))\n        history.push('/')\n        dispatch(setNotification(`${blog.title} by ${blog.author} was successfully deleted!`, 'ok'))\n      } catch(exception){\n        dispatch(setNotification('Error!'))\n      }\n  }\n\n  const handleLike = async () => {\n    try {\n      dispatch(likeBlog(blog))\n      dispatch(setNotification(`Like added to: ${blog.title}`, 'ok'))\n    } catch (exception){\n      dispatch(setNotification('Error!'))\n    }\n  }\n\n  const handleComment = async (event) => {\n    event.preventDefault()\n    try {\n      const comment = event.target.comment.value\n      event.target.comment.value = ''\n      dispatch(addComment(blog.id, comment))\n      dispatch(setNotification('Your comment was added successfully!', 'ok'))\n    } catch (exception){\n      dispatch(setNotification('Error!'))\n    }\n  }\n\n  if (!blog) {\n    return null\n  }\n\n  return(\n    <div className=\"blogview-container\">\n      <div className=\"blog-container\">\n        <div className=\"blog-title\">\n          <h2>{blog.title},&nbsp;&nbsp;{blog.author}</h2>\n        </div>\n        <div className=\"blog-body\">\n          <div className=\"body-1\">\n            <a href={blog.url}>{blog.url}</a>\n          </div>\n          <div className=\"body-1\">\n            {blog.likes}&nbsp;Likes\n            <button onClick={handleLike} id=\"like-button\">like</button>\n          </div>\n          <div className=\"body-1\">\n          added by:&nbsp;{blog.user.name}\n          </div>\n        </div>\n      </div>\n      <div className=\"comments-container\">\n        <div className=\"comments-form\">\n          <form onSubmit={handleComment}>\n            <input\n              name=\"comment\"\n              id=\"comment-input\"\n            />\n            <button type=\"submit\" id=\"comment-button\">add comment</button>\n          </form>\n        </div>\n        <h5 className=\"comments-header\">comments:</h5>\n        <ul>\n          {blog.comments.map(comment =>\n            <li key={comment.id} className=\"stripe-li comment-li\">{comment.comment}</li>)}\n        </ul>\n      </div>\n      {showDeleteButton()}\n    </div>\n  )\n}\n\nexport default Blog","import React from 'react'\n\nimport { Link } from 'react-router-dom'\n\nconst BlogList = ({ blogs }) => {\n\n  const byLikes = (b1, b2) => b2.likes - b1.likes\n\n  return(\n    <div>\n      <ul className=\"BlogList-ul\">\n        {blogs.sort(byLikes).map(blog =>\n          <li key={blog.id} className=\"BlogList-li stripe-li\">\n            <Link to={`/${blog.id}`} className=\"link\">{blog.title},&nbsp;&nbsp;{blog.author}</Link>\n          </li>\n        )}\n      </ul>\n    </div>\n  )\n}\n\nexport default BlogList","import React from 'react'\nimport { useSelector } from 'react-redux'\n\nconst Notification = () => {\n  const notification = useSelector(state => state.notifications)\n\n  if (notification === null) {\n    return null\n  }\n\n  return (\n    <div className=\"notification\" style={{ color: notification.type ==='ok' ? 'green' : 'red' }}>\n      {notification.message}\n    </div>\n  )\n}\n\nexport default Notification\n","import React, { useState, useImperativeHandle } from 'react'\nimport PropTypes from 'prop-types'\n\nconst Togglable = React.forwardRef((props, ref) => {\n  const [visible, setVisible] = useState(false)\n\n  const hideWhenVisible = { display: visible ? 'none' : '' }\n  const showWhenVisible = { display: visible ? '' : 'none' }\n\n  const toggleVisibility = () => {\n    setVisible(!visible)\n  }\n\n  useImperativeHandle(ref, () => {\n    return {\n      toggleVisibility\n    }\n  })\n\n  Togglable.propTypes = {\n    buttonLabel: PropTypes.string.isRequired\n  }\n\n\n  return (\n    <div>\n      <div style={hideWhenVisible}>\n        <button onClick={toggleVisibility}>{props.buttonLabel}</button>\n      </div>\n      <div style={showWhenVisible}>\n        {props.children}\n        <button onClick={toggleVisibility}>cancel</button>\n      </div>\n    </div>\n  )\n})\n\nTogglable.displayName = 'Togglable'\n\nexport default Togglable","import React, { useRef } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { createBlog } from '../reducers/blogReducer'\nimport { setNotification } from '../reducers/notificationReducer'\nimport Togglable from '../components/Togglable'\n\nconst BlogForm = () => {\n  const dispatch = useDispatch()\n  const blogFormRef = useRef()\n\n  const addBlog = async (event) => {\n    event.preventDefault()\n\n    const title = event.target.title.value\n    event.target.title.value = ''\n\n    const author = event.target.author.value\n    event.target.author.value = ''\n\n    const url = event.target.url.value\n    event.target.url.value = ''\n\n    blogFormRef.current.toggleVisibility()\n    dispatch(createBlog(title, author, url))\n    dispatch(setNotification(`A new blog:  '${title}' by: ${author} has been added`, 'ok'))\n  }\n\n  return (\n    <div className=\"blog-form\">\n      <Togglable buttonLabel='add new blog'\n        buttonBorderRadius={5} ref={blogFormRef}>\n        <div className=\"form-div\">\n          <h2>Create new:</h2>\n\n          <form onSubmit={addBlog}>\n            <div>\n              Title: <input\n                id=\"title\"\n                name=\"title\"\n                type=\"text\"\n              />\n            </div>\n            <div>\n              Author: <input\n                id=\"author\"\n                name=\"author\"\n                type=\"text\"\n              />\n            </div>\n            <div>\n              Url: <input\n                id=\"url\"\n                name=\"url\"\n                type=\"text\"\n              />\n            </div>\n            <button type=\"submit\" >create</button>\n          </form>\n        </div>\n      </Togglable>\n    </div>\n  )\n}\n\nexport default BlogForm","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst LoginForm = ({\n  handleSubmit,\n  username,\n  password,\n  handleUsernameChange,\n  handlePasswordChange\n}) => {\n  return (\n    <div className=\"login-form\">\n      <form onSubmit={handleSubmit}>\n        <div>\n          <h2>Log in to application:</h2>\n          username:\n          <input\n            id=\"username\"\n            type=\"text\"\n            value={username}\n            name=\"Username\"\n            onChange={handleUsernameChange}\n          />\n        </div>\n        <div>\n          password:\n          <input\n            id=\"password\"\n            type=\"password\"\n            value={password}\n            name=\"Password\"\n            onChange={handlePasswordChange}\n          />\n        </div>\n        <button id=\"login-button\" type=\"submit\">login</button>\n      </form>\n    </div>\n  )\n}\n\nLoginForm.propTypes = {\n  handleSubmit: PropTypes.func.isRequired,\n  handleUsernameChange: PropTypes.func.isRequired,\n  handlePasswordChange: PropTypes.func.isRequired,\n  username: PropTypes.string.isRequired,\n  password: PropTypes.string.isRequired\n}\n\nexport default LoginForm","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nconst UserList = ({ users }) => {\n  console.log('users in UserList: ', users)\n\n  return(\n    <div>\n      <h2 className=\"users-header\">Users:</h2>\n      <table className=\"table\">\n        <thead>\n          <tr>\n            <th className=\"th\"></th>\n            <th className=\"th\" style={{ fontSize: '.94rem' }}>blogs created:</th>\n          </tr>\n        </thead>\n        <tbody>\n          {users.map(user =>\n            <tr key={user.id} className=\"tr\">\n              <td className=\"td\">\n                <Link to={`/users/${user.id}`} className=\"link\">{user.name}</Link>\n              </td>\n              <td className=\"td\" style={{ paddingLeft: '7rem' }}>\n                {user.blogs.length}\n              </td>\n            </tr>\n          )}\n        </tbody>\n      </table>\n    </div>\n  )\n}\n\nexport default UserList","import React from 'react'\n\nexport const User = ({ user }) => {\n  if (!user) {\n    return null\n  }\n\n  return(\n    <div>\n      <h2 className=\"user-name\">{user.name}</h2>\n      <h5 style={{ fontSize: '.94rem' }}>added blogs:</h5>\n      <ul>\n        {user.blogs.map(user =>\n          <li key={user.id} className=\"user-li stripe-li\">\n            {user.title}\n          </li>)}\n      </ul>\n    </div>\n  )\n}\n\nexport default User","import React from 'react'\n\nconst Footer = () => {\n  const footerStyle = {\n    color: 'green',\n    fontStyle: 'italic',\n    fontSize: 16\n  }\n\n  return (\n    <div style={footerStyle}>\n      <br />\n      <em>Blog app, Made by Jonathan Dennis for submission to the University of Helsinki Full Stack Open MOOC 2020</em>\n    </div>\n  )\n}\n\nexport default Footer","import axios from 'axios'\nconst baseUrl = '/api/login'\n\nconst login = async credentials => {\n  const response = await axios.post(baseUrl, credentials)\n  return response.data\n}\n\nexport default { login }","import React, { useState, useEffect } from 'react'\nimport Blog from './components/Blog'\nimport BlogList from './components/BlogList'\nimport Notification from './components/Notification'\nimport BlogForm from './components/BlogForm'\nimport LoginForm from './components/LoginForm'\nimport UserList from './components/UserList'\nimport User from './components/User'\nimport Footer from './components/Footer'\nimport blogService from './services/blogs'\nimport loginService from './services/login'\nimport './App.css'\n\nimport { initializeBlogs } from './reducers/blogReducer'\nimport { initializeLoggedUser, setLoggedUser, setLoggedUserNull } from './reducers/loggedUserReducer'\nimport { initializeUsers } from './reducers/usersReducer'\nimport { setNotification } from './reducers/notificationReducer'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport {\n  Switch, Route, Link, useRouteMatch, useHistory\n} from 'react-router-dom'\n\n\nconst App = () => {\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n\n  const blogs = useSelector(state => state.blogs)\n  const loggedUser = useSelector(state => state.loggedUser)\n  const users = useSelector(state => state.users)\n\n  const dispatch = useDispatch()\n  const history = useHistory()\n\n  useEffect(() => {\n    dispatch(initializeBlogs())\n  }, [dispatch])\n\n  useEffect(() => {\n    dispatch(initializeLoggedUser())\n  }, [dispatch])\n\n  useEffect(() => {\n    dispatch(initializeUsers())\n  }, [dispatch])\n\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    console.log('logging in with', username, password)\n\n    try {\n      const loggedUser = await loginService.login({\n        username, password,\n      })\n\n      window.localStorage.setItem(\n        'loggedBlogappUser', JSON.stringify(loggedUser)\n      )\n      blogService.setToken(loggedUser.token)\n      dispatch(setLoggedUser())\n      setUsername('')\n      setPassword('')\n      dispatch(setNotification(`${loggedUser.name} has been sucessfully logged in.`, 'ok'))\n    } catch (error) {\n      dispatch(setNotification('Wrong username or password'))\n      setUsername('')\n      setPassword('')\n    }\n  }\n\n  const handleLogout = async () => {\n    window.localStorage.removeItem(\n      'loggedBlogappUser', JSON.stringify(loggedUser)\n    )\n    dispatch(setLoggedUserNull(null))\n    history.push('/')\n    dispatch(setNotification(`${loggedUser.name} has been sucessfully logged out.`, 'ok'))\n  }\n\n  const loginForm = () => (\n    <LoginForm\n      username={username}\n      password={password}\n      handleUsernameChange={({ target }) => setUsername(target.value)}\n      handlePasswordChange={({ target }) => setPassword(target.value)}\n      handleSubmit={handleLogin}\n    />\n  )\n\n  const matchBlogs = useRouteMatch('/:id')\n  const blog = matchBlogs\n    ? blogs.find(blog => blog.id === String(matchBlogs.params.id))\n    : null\n\n  const matchUsers = useRouteMatch('/users/:id')\n  const user = matchUsers\n    ? users.find(user => user.id === String(matchUsers.params.id))\n    : null\n\n  if (loggedUser === null) {\n    return (\n      <body className=\"body\">\n        <main className=\"main\">\n          <h2 className=\"blog-app\">&lt;blog app&gt;</h2>\n          <Notification />\n          {loginForm()}\n          <footer className=\"footer\">\n            <Footer />\n          </footer>\n        </main>\n      </body>\n    )\n  }\n\n  return (\n    <body className=\"body\">\n      <header>\n        <nav className=\"nav-bar\">\n          <div className=\"nav-left\">\n            <Link className=\"link nav-link-1\" to=\"/\">blogs</Link>\n            <Link className=\"link nav-link-2\" to=\"/users\">users</Link>\n          </div>\n          <div className=\"nav-right\">\n            <em id=\"nav-user\">{loggedUser.name} logged in </em>\n            <button type=\"submit\" onClick={handleLogout} id=\"nav-button\">logout</button>\n          </div>\n        </nav>\n        <h2 className=\"blog-app\">&lt;blog app&gt;</h2>\n      </header>\n      <main className=\"main\">\n        <Notification />\n        <Switch>\n          <Route path=\"/users/:id\">\n            <User user={user} />\n          </Route>\n          <Route path=\"/users\">\n            <UserList users={users} />\n          </Route>\n          <Route path=\"/:id\">\n            <Blog blog={blog} loggedUser={loggedUser} />\n          </Route>\n          <Route path=\"/\">\n            <BlogForm loggedUser={loggedUser} />\n            <BlogList blogs={blogs} />\n          </Route>\n        </Switch>\n        <footer className=\"footer\">\n          <Footer />\n        </footer>\n      </main>\n    </body>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport App from './App'\n\n\nimport { BrowserRouter as Router } from 'react-router-dom'\n\nimport './index.css'\nimport '../src/fonts/Lato-Regular.ttf'\nimport '../src/fonts/Lato-Italic.ttf'\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById('root')\n)"],"sourceRoot":""}