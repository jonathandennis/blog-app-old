{"ast":null,"code":"var _jsxFileName = \"/Users/jonathandennis/MOOC_fullStack/part5/bloglist-frontend/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport Blog from './components/Blog';\nimport BlogList from './components/BlogList';\nimport Notification from './components/Notification';\nimport BlogForm from './components/BlogForm';\nimport LoginForm from './components/LoginForm';\nimport UserList from './components/UserList';\nimport User from './components/User';\nimport Footer from './components/Footer';\nimport blogService from './services/blogs';\nimport loginService from './services/login';\nimport './App.css';\nimport { initializeBlogs } from './reducers/blogReducer';\nimport { initializeLoggedUser, setLoggedUser, setLoggedUserNull } from './reducers/loggedUserReducer';\nimport { initializeUsers } from './reducers/usersReducer';\nimport { setNotification } from './reducers/notificationReducer';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Switch, Route, Link, useRouteMatch, useHistory } from 'react-router-dom';\n\nconst App = () => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const blogs = useSelector(state => state.blogs);\n  const loggedUser = useSelector(state => state.loggedUser);\n  const users = useSelector(state => state.users);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  useEffect(() => {\n    dispatch(initializeBlogs());\n  }, [dispatch]);\n  useEffect(() => {\n    dispatch(initializeLoggedUser());\n  }, [dispatch]);\n  useEffect(() => {\n    dispatch(initializeUsers());\n  }, [dispatch]);\n\n  const handleLogin = async event => {\n    event.preventDefault();\n    console.log('logging in with', username, password);\n\n    try {\n      const loggedUser = await loginService.login({\n        username,\n        password\n      });\n      window.localStorage.setItem('loggedBlogappUser', JSON.stringify(loggedUser));\n      blogService.setToken(loggedUser.token);\n      dispatch(setLoggedUser());\n      setUsername('');\n      setPassword('');\n      dispatch(setNotification(`${loggedUser.name} has been sucessfully logged in.`, 'ok'));\n    } catch (error) {\n      dispatch(setNotification('Wrong username or password'));\n      setUsername('');\n      setPassword('');\n    }\n  };\n\n  const handleLogout = async () => {\n    window.localStorage.removeItem('loggedBlogappUser', JSON.stringify(loggedUser));\n    dispatch(setLoggedUserNull(null));\n    history.push('/');\n    dispatch(setNotification(`${loggedUser.name} has been sucessfully logged out.`, 'ok'));\n  };\n\n  const loginForm = () => /*#__PURE__*/React.createElement(LoginForm, {\n    username: username,\n    password: password,\n    handleUsernameChange: ({\n      target\n    }) => setUsername(target.value),\n    handlePasswordChange: ({\n      target\n    }) => setPassword(target.value),\n    handleSubmit: handleLogin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 5\n    }\n  });\n\n  const matchBlogs = useRouteMatch('/:id');\n  const blog = matchBlogs ? blogs.find(blog => blog.id === String(matchBlogs.params.id)) : null;\n  const matchUsers = useRouteMatch('/users/:id');\n  const user = matchUsers ? users.find(user => user.id === String(matchUsers.params.id)) : null;\n\n  if (loggedUser === null) {\n    return /*#__PURE__*/React.createElement(\"body\", {\n      className: \"body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"main\", {\n      className: \"main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"blog-app\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }\n    }, \"<blog app>\"), /*#__PURE__*/React.createElement(Notification, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }\n    }), loginForm(), /*#__PURE__*/React.createElement(\"footer\", {\n      className: \"footer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n  return /*#__PURE__*/React.createElement(\"body\", {\n    className: \"body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"nav\", {\n    className: \"nav-bar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"nav-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    className: \"link nav-link-1\",\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  }, \"blogs\"), /*#__PURE__*/React.createElement(Link, {\n    className: \"link nav-link-2\",\n    to: \"/users\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }\n  }, \"users\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"nav-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"em\", {\n    id: \"nav-user\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }\n  }, loggedUser.name, \" logged in \"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    onClick: handleLogout,\n    id: \"nav-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }\n  }, \"logout\"))), /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"blog-app\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }\n  }, \"<blog app>\")), /*#__PURE__*/React.createElement(\"main\", {\n    className: \"main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Notification, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    path: \"/users/:id\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(User, {\n    user: user,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    path: \"/users\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(UserList, {\n    users: users,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    path: \"/:id\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Blog, {\n    blog: blog,\n    loggedUser: loggedUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    path: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(BlogForm, {\n    loggedUser: loggedUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(BlogList, {\n    blogs: blogs,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"footer\", {\n    className: \"footer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/jonathandennis/MOOC_fullStack/part5/bloglist-frontend/src/App.js"],"names":["React","useState","useEffect","Blog","BlogList","Notification","BlogForm","LoginForm","UserList","User","Footer","blogService","loginService","initializeBlogs","initializeLoggedUser","setLoggedUser","setLoggedUserNull","initializeUsers","setNotification","useDispatch","useSelector","Switch","Route","Link","useRouteMatch","useHistory","App","username","setUsername","password","setPassword","blogs","state","loggedUser","users","dispatch","history","handleLogin","event","preventDefault","console","log","login","window","localStorage","setItem","JSON","stringify","setToken","token","name","error","handleLogout","removeItem","push","loginForm","target","value","matchBlogs","blog","find","id","String","params","matchUsers","user"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport Blog from './components/Blog'\nimport BlogList from './components/BlogList'\nimport Notification from './components/Notification'\nimport BlogForm from './components/BlogForm'\nimport LoginForm from './components/LoginForm'\nimport UserList from './components/UserList'\nimport User from './components/User'\nimport Footer from './components/Footer'\nimport blogService from './services/blogs'\nimport loginService from './services/login'\nimport './App.css'\n\nimport { initializeBlogs } from './reducers/blogReducer'\nimport { initializeLoggedUser, setLoggedUser, setLoggedUserNull } from './reducers/loggedUserReducer'\nimport { initializeUsers } from './reducers/usersReducer'\nimport { setNotification } from './reducers/notificationReducer'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport {\n  Switch, Route, Link, useRouteMatch, useHistory\n} from 'react-router-dom'\n\n\nconst App = () => {\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n\n  const blogs = useSelector(state => state.blogs)\n  const loggedUser = useSelector(state => state.loggedUser)\n  const users = useSelector(state => state.users)\n\n  const dispatch = useDispatch()\n  const history = useHistory()\n\n  useEffect(() => {\n    dispatch(initializeBlogs())\n  }, [dispatch])\n\n  useEffect(() => {\n    dispatch(initializeLoggedUser())\n  }, [dispatch])\n\n  useEffect(() => {\n    dispatch(initializeUsers())\n  }, [dispatch])\n\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    console.log('logging in with', username, password)\n\n    try {\n      const loggedUser = await loginService.login({\n        username, password,\n      })\n\n      window.localStorage.setItem(\n        'loggedBlogappUser', JSON.stringify(loggedUser)\n      )\n      blogService.setToken(loggedUser.token)\n      dispatch(setLoggedUser())\n      setUsername('')\n      setPassword('')\n      dispatch(setNotification(`${loggedUser.name} has been sucessfully logged in.`, 'ok'))\n    } catch (error) {\n      dispatch(setNotification('Wrong username or password'))\n      setUsername('')\n      setPassword('')\n    }\n  }\n\n  const handleLogout = async () => {\n    window.localStorage.removeItem(\n      'loggedBlogappUser', JSON.stringify(loggedUser)\n    )\n    dispatch(setLoggedUserNull(null))\n    history.push('/')\n    dispatch(setNotification(`${loggedUser.name} has been sucessfully logged out.`, 'ok'))\n  }\n\n  const loginForm = () => (\n    <LoginForm\n      username={username}\n      password={password}\n      handleUsernameChange={({ target }) => setUsername(target.value)}\n      handlePasswordChange={({ target }) => setPassword(target.value)}\n      handleSubmit={handleLogin}\n    />\n  )\n\n  const matchBlogs = useRouteMatch('/:id')\n  const blog = matchBlogs\n    ? blogs.find(blog => blog.id === String(matchBlogs.params.id))\n    : null\n\n  const matchUsers = useRouteMatch('/users/:id')\n  const user = matchUsers\n    ? users.find(user => user.id === String(matchUsers.params.id))\n    : null\n\n  if (loggedUser === null) {\n    return (\n      <body className=\"body\">\n        <main className=\"main\">\n          <h2 className=\"blog-app\">&lt;blog app&gt;</h2>\n          <Notification />\n          {loginForm()}\n          <footer className=\"footer\">\n            <Footer />\n          </footer>\n        </main>\n      </body>\n    )\n  }\n\n  return (\n    <body className=\"body\">\n      <header className=\"header\">\n        <nav className=\"nav-bar\">\n          <div className=\"nav-left\">\n            <Link className=\"link nav-link-1\" to=\"/\">blogs</Link>\n            <Link className=\"link nav-link-2\" to=\"/users\">users</Link>\n          </div>\n          <div className=\"nav-right\">\n            <em id=\"nav-user\">{loggedUser.name} logged in </em>\n            <button type=\"submit\" onClick={handleLogout} id=\"nav-button\">logout</button>\n          </div>\n        </nav>\n        <h2 className=\"blog-app\">&lt;blog app&gt;</h2>\n      </header>\n      <main className=\"main\">\n        <Notification />\n        <Switch>\n          <Route path=\"/users/:id\">\n            <User user={user} />\n          </Route>\n          <Route path=\"/users\">\n            <UserList users={users} />\n          </Route>\n          <Route path=\"/:id\">\n            <Blog blog={blog} loggedUser={loggedUser} />\n          </Route>\n          <Route path=\"/\">\n            <BlogForm loggedUser={loggedUser} />\n            <BlogList blogs={blogs} />\n          </Route>\n        </Switch>\n        <footer className=\"footer\">\n          <Footer />\n        </footer>\n      </main>\n    </body>\n  )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}