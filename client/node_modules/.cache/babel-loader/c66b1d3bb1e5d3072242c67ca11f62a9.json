{"ast":null,"code":"var _jsxFileName = \"/Users/jonathandennis/MOOC_fullStack/part5/bloglist-frontend/src/components/Blog.js\";\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { likeBlog, deleteBlog } from '../reducers/blogReducer';\nimport { setNotification } from '../reducers/notificationReducer';\nimport { useHistory } from 'react-router-dom';\n\nconst Blog = ({\n  blog,\n  loggedUser\n}) => {\n  console.log('blog in Blog: ', blog);\n  const dispatch = useDispatch();\n  const history = useHistory(); // Allow blogs to be deleted only if blog post created by user\n\n  const showDeleteButton = () => {\n    if (loggedUser.username === blog.user['username']) {\n      return /*#__PURE__*/React.createElement(\"button\", {\n        onClick: () => handleDeleteBlog(blog.id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 9\n        }\n      }, \"Remove\");\n    }\n  };\n\n  const handleDeleteBlog = id => {\n    //const toDelete = blogs.find(blog => blog.id === id)\n    const toDelete = blog;\n\n    if (window.confirm(`Remove: ${toDelete.title} By: ${toDelete.author}?`)) {\n      dispatch(deleteBlog(id));\n      history.push('/');\n      dispatch(setNotification(`${toDelete.title} by ${toDelete.author} was successfully deleted!`, 5)); //notify(`${toDelete.title} by ${toDelete.author} was successfully deleted!`, 'ok')\n    }\n  };\n\n  const handleLike = async () => {\n    console.log('blog in handleLike: ', blog);\n\n    try {\n      dispatch(likeBlog(blog));\n      dispatch(setNotification(`Like added to: ${blog.title}`, 5)); //notify(`Like added to: ${blog.title}`, 'ok')\n    } catch (exception) {\n      dispatch(setNotification('Error!', 5)); //notify('Error!')\n    }\n  };\n\n  if (!blog) {\n    return null;\n  }\n\n  const buttonStyle = {\n    marginLeft: 3,\n    padding: (0, 2, 0, 2),\n    borderRadius: 6\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, blog.title, \" \", blog.author)), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, blog.url, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }), blog.likes, \" Likes\", /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleLike,\n    style: buttonStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, \"like\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }), \"added by: \", blog.user.name, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, \"comments\"), blog.comments.map, showDeleteButton()));\n};\n\nexport default Blog;","map":{"version":3,"sources":["/Users/jonathandennis/MOOC_fullStack/part5/bloglist-frontend/src/components/Blog.js"],"names":["React","useDispatch","likeBlog","deleteBlog","setNotification","useHistory","Blog","blog","loggedUser","console","log","dispatch","history","showDeleteButton","username","user","handleDeleteBlog","id","toDelete","window","confirm","title","author","push","handleLike","exception","buttonStyle","marginLeft","padding","borderRadius","url","likes","name","comments","map"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,SAASC,QAAT,EAAmBC,UAAnB,QAAqC,yBAArC;AACA,SAASC,eAAT,QAAgC,iCAAhC;AAEA,SAASC,UAAT,QAA2B,kBAA3B;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAA0B;AACrCC,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BH,IAA9B;AAEA,QAAMI,QAAQ,GAAGV,WAAW,EAA5B;AACA,QAAMW,OAAO,GAAGP,UAAU,EAA1B,CAJqC,CAMrC;;AACA,QAAMQ,gBAAgB,GAAG,MAAM;AAE7B,QAAIL,UAAU,CAACM,QAAX,KAAwBP,IAAI,CAACQ,IAAL,CAAU,UAAV,CAA5B,EAAmD;AACjD,0BACE;AAAQ,QAAA,OAAO,EAAE,MAAMC,gBAAgB,CAACT,IAAI,CAACU,EAAN,CAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF;AAGD;AACF,GAPD;;AASA,QAAMD,gBAAgB,GAAIC,EAAD,IAAQ;AAC/B;AACA,UAAMC,QAAQ,GAAGX,IAAjB;;AAEA,QAAIY,MAAM,CAACC,OAAP,CAAgB,WAAUF,QAAQ,CAACG,KAAM,QAAOH,QAAQ,CAACI,MAAO,GAAhE,CAAJ,EAAyE;AAEvEX,MAAAA,QAAQ,CAACR,UAAU,CAACc,EAAD,CAAX,CAAR;AACAL,MAAAA,OAAO,CAACW,IAAR,CAAa,GAAb;AACAZ,MAAAA,QAAQ,CAACP,eAAe,CAAE,GAAEc,QAAQ,CAACG,KAAM,OAAMH,QAAQ,CAACI,MAAO,4BAAzC,EAAsE,CAAtE,CAAhB,CAAR,CAJuE,CAKvE;AACD;AACF,GAXD;;AAaA,QAAME,UAAU,GAAG,YAAY;AAC7Bf,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCH,IAApC;;AAEA,QAAI;AACFI,MAAAA,QAAQ,CAACT,QAAQ,CAACK,IAAD,CAAT,CAAR;AACAI,MAAAA,QAAQ,CAACP,eAAe,CAAE,kBAAiBG,IAAI,CAACc,KAAM,EAA9B,EAAiC,CAAjC,CAAhB,CAAR,CAFE,CAGF;AACD,KAJD,CAIE,OAAOI,SAAP,EAAiB;AACjBd,MAAAA,QAAQ,CAACP,eAAe,CAAC,QAAD,EAAW,CAAX,CAAhB,CAAR,CADiB,CAEjB;AACD;AACF,GAXD;;AAaA,MAAI,CAACG,IAAL,EAAW;AACT,WAAO,IAAP;AACD;;AAED,QAAMmB,WAAW,GAAG;AAClBC,IAAAA,UAAU,EAAE,CADM;AAElBC,IAAAA,OAAO,GAAG,GAAG,CAAH,EAAM,CAAN,EAAS,CAAZ,CAFW;AAGlBC,IAAAA,YAAY,EAAE;AAHI,GAApB;AAMA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKtB,IAAI,CAACc,KAAV,OAAkBd,IAAI,CAACe,MAAvB,CADF,CADF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGf,IAAI,CAACuB,GADR,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGGvB,IAAI,CAACwB,KAHR,yBAIE;AAAQ,IAAA,OAAO,EAAEP,UAAjB;AAA6B,IAAA,KAAK,EAAEE,WAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,gBAManB,IAAI,CAACQ,IAAL,CAAUiB,IANvB,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARF,EASGzB,IAAI,CAAC0B,QAAL,CAAcC,GATjB,EAUGrB,gBAAgB,EAVnB,CAJF,CADF;AAmBD,CAvED;;AAyEA,eAAeP,IAAf","sourcesContent":["import React from 'react'\nimport { useDispatch } from 'react-redux'\n\nimport { likeBlog, deleteBlog } from '../reducers/blogReducer'\nimport { setNotification } from '../reducers/notificationReducer'\n\nimport { useHistory } from 'react-router-dom'\n\nconst Blog = ({ blog, loggedUser }) => {\n  console.log('blog in Blog: ', blog)\n\n  const dispatch = useDispatch()\n  const history = useHistory()\n\n  // Allow blogs to be deleted only if blog post created by user\n  const showDeleteButton = () => {\n\n    if (loggedUser.username === blog.user['username']) {\n      return (\n        <button onClick={() => handleDeleteBlog(blog.id)}>Remove</button>\n      )\n    }\n  }\n\n  const handleDeleteBlog = (id) => {\n    //const toDelete = blogs.find(blog => blog.id === id)\n    const toDelete = blog\n\n    if (window.confirm(`Remove: ${toDelete.title} By: ${toDelete.author}?`)) {\n\n      dispatch(deleteBlog(id))\n      history.push('/')\n      dispatch(setNotification(`${toDelete.title} by ${toDelete.author} was successfully deleted!`, 5))\n      //notify(`${toDelete.title} by ${toDelete.author} was successfully deleted!`, 'ok')\n    }\n  }\n\n  const handleLike = async () => {\n    console.log('blog in handleLike: ', blog)\n\n    try {\n      dispatch(likeBlog(blog))\n      dispatch(setNotification(`Like added to: ${blog.title}`, 5))\n      //notify(`Like added to: ${blog.title}`, 'ok')\n    } catch (exception){\n      dispatch(setNotification('Error!', 5))\n      //notify('Error!')\n    }\n  }\n\n  if (!blog) {\n    return null\n  }\n\n  const buttonStyle = {\n    marginLeft: 3,\n    padding: (0, 2, 0, 2),\n    borderRadius: 6,\n  }\n\n  return(\n    <div>\n      <div>\n        <h2>{blog.title} {blog.author}</h2>\n      </div>\n      <div>\n        {blog.url}\n        <br />\n        {blog.likes} Likes\n        <button onClick={handleLike} style={buttonStyle}>like</button>\n        <br />\n        added by: {blog.user.name}\n        <br />\n        <h4>comments</h4>\n        {blog.comments.map}\n        {showDeleteButton()}\n      </div>\n    </div>\n  )\n}\n\nexport default Blog\n"]},"metadata":{},"sourceType":"module"}