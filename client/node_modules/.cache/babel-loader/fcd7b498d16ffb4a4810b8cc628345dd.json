{"ast":null,"code":"import axios from 'axios';\nconst baseUrl = '/api/blogs';\nlet token = null;\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`;\n};\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then(response => response.data);\n}; // const create =  async newObject => {\n//   const config = {\n//     headers: { Authorization: token },\n//   }\n//   const response = await axios.post(baseUrl, newObject, config)\n//   return response.data\n// }\n\n\nconst create = async newObject => {\n  const config = {\n    headers: {\n      Authorization: token\n    }\n  }; //const object = { title, author, url, likes: 0 }\n\n  const response = await axios.post(baseUrl, newObject, config);\n  return response.data;\n};\n\nconst update = (id, newObject) => {\n  console.log('newObject in blogs services: ', newObject);\n  return axios.put(`${baseUrl}/${id}`, newObject);\n};\n\nconst remove = async id => {\n  const config = {\n    headers: {\n      Authorization: token\n    }\n  };\n  const request = await axios.delete(`${baseUrl}/${id}`, config);\n  const response = await request.data;\n  return response;\n};\n\nexport default {\n  getAll,\n  create,\n  setToken,\n  update,\n  remove\n};","map":{"version":3,"sources":["/Users/jonathandennis/MOOC_fullStack/part5/bloglist-frontend/src/services/blogs.js"],"names":["axios","baseUrl","token","setToken","newToken","getAll","request","get","then","response","data","create","newObject","config","headers","Authorization","post","update","id","console","log","put","remove","delete"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,MAAMC,OAAO,GAAG,YAAhB;AAEA,IAAIC,KAAK,GAAG,IAAZ;;AAEA,MAAMC,QAAQ,GAAGC,QAAQ,IAAI;AAC3BF,EAAAA,KAAK,GAAI,UAASE,QAAS,EAA3B;AACD,CAFD;;AAIA,MAAMC,MAAM,GAAG,MAAM;AACnB,QAAMC,OAAO,GAAGN,KAAK,CAACO,GAAN,CAAUN,OAAV,CAAhB;AACA,SAAOK,OAAO,CAACE,IAAR,CAAaC,QAAQ,IAAIA,QAAQ,CAACC,IAAlC,CAAP;AACD,CAHD,C,CAKA;AACA;AACA;AACA;AAEA;AACA;AACA;;;AAEA,MAAMC,MAAM,GAAI,MAAOC,SAAP,IAAqB;AACnC,QAAMC,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE;AAAEC,MAAAA,aAAa,EAAEb;AAAjB;AADI,GAAf,CADmC,CAInC;;AAEA,QAAMO,QAAQ,GAAG,MAAMT,KAAK,CAACgB,IAAN,CAAWf,OAAX,EAAoBW,SAApB,EAA+BC,MAA/B,CAAvB;AACA,SAAOJ,QAAQ,CAACC,IAAhB;AACD,CARD;;AAUA,MAAMO,MAAM,GAAG,CAACC,EAAD,EAAKN,SAAL,KAAmB;AAChCO,EAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ,EAA6CR,SAA7C;AACA,SAAOZ,KAAK,CAACqB,GAAN,CAAW,GAAEpB,OAAQ,IAAGiB,EAAG,EAA3B,EAA8BN,SAA9B,CAAP;AACD,CAHD;;AAKA,MAAMU,MAAM,GAAG,MAAOJ,EAAP,IAAc;AAE3B,QAAML,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE;AAAEC,MAAAA,aAAa,EAAEb;AAAjB;AADI,GAAf;AAGA,QAAMI,OAAO,GAAG,MAAMN,KAAK,CAACuB,MAAN,CAAc,GAAEtB,OAAQ,IAAGiB,EAAG,EAA9B,EAAiCL,MAAjC,CAAtB;AACA,QAAMJ,QAAQ,GAAG,MAAMH,OAAO,CAACI,IAA/B;AACA,SAAOD,QAAP;AACD,CARD;;AAUA,eAAe;AAAEJ,EAAAA,MAAF;AAAUM,EAAAA,MAAV;AAAkBR,EAAAA,QAAlB;AAA4Bc,EAAAA,MAA5B;AAAoCK,EAAAA;AAApC,CAAf","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/blogs'\n\nlet token = null\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`\n}\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\n// const create =  async newObject => {\n//   const config = {\n//     headers: { Authorization: token },\n//   }\n\n//   const response = await axios.post(baseUrl, newObject, config)\n//   return response.data\n// }\n\nconst create =  async (newObject) => {\n  const config = {\n    headers: { Authorization: token },\n  }\n  //const object = { title, author, url, likes: 0 }\n\n  const response = await axios.post(baseUrl, newObject, config)\n  return response.data\n}\n\nconst update = (id, newObject) => {\n  console.log('newObject in blogs services: ', newObject)\n  return axios.put(`${baseUrl}/${id}`, newObject)\n}\n\nconst remove = async (id) => {\n\n  const config = {\n    headers: { Authorization: token },\n  }\n  const request = await axios.delete(`${baseUrl}/${id}`, config)\n  const response = await request.data\n  return response\n}\n\nexport default { getAll, create, setToken, update, remove }"]},"metadata":{},"sourceType":"module"}