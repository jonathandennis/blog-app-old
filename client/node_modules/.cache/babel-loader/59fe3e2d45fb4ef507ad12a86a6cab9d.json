{"ast":null,"code":"var _jsxFileName = \"/Users/jonathandennis/MOOC_fullStack/part5/bloglist-frontend/src/App.js\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport Blog from './components/Blog';\nimport Notification from './components/Notification';\nimport BlogForm from './components/BlogForm';\nimport LoginForm from './components/LoginForm';\nimport Togglable from './components/Togglable';\nimport Footer from './components/Footer';\nimport blogService from './services/blogs';\nimport loginService from './services/login';\nimport { initializeBlogs } from './reducers/blogReducer';\nimport { useDispatch } from 'react-redux';\n\nconst App = () => {\n  //const [blogs, setBlogs] = useState([])\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [user, setUser] = useState(null);\n  const [notification, setNotification] = useState(null);\n  const dispatch = useDispatch(); //const blogFormRef = useRef()\n  // useEffect(() => {\n  //   blogService.getAll().then(blogs =>\n  //     setBlogs( blogs )\n  //   )\n  // }, [])\n\n  useEffect(() => {\n    blogService.getAll().then(blogs => dispatch(initializeBlogs(blogs)));\n  }, [dispatch]);\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser');\n\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON);\n      setUser(user);\n      blogService.setToken(user.token);\n    }\n  }, []);\n\n  const notify = (message, type = 'error') => {\n    setNotification({\n      type,\n      message\n    });\n    setTimeout(() => {\n      setNotification(null);\n    }, 5000);\n  }; // const addBlog = (blogObject) => {\n  //   console.log('blogObject: ', blogObject)\n  //   blogFormRef.current.toggleVisibility()\n  //   blogService\n  //     .create(blogObject)\n  //     .then(returnedBlog => {\n  //       setBlogs(blogs.concat(returnedBlog))\n  //       notify(`a new blog ${blogObject.title} by ${blogObject.author} added`, 'ok')\n  //     })\n  // }\n  // const deleteBlog = (id) => {\n  //   const toDelete = blogs.find(blog => blog.id === id)\n  //   if (window.confirm(`Remove: ${toDelete.title} By: ${toDelete.author}?`)) {\n  //     blogService\n  //       .remove(id)\n  //     setBlogs(blogs.filter(blog => blog.id !== id))\n  //     notify(`${toDelete.title} by ${toDelete.author} was successfully deleted!`, 'ok')\n  //   }\n  // }\n\n\n  const handleLogin = async event => {\n    event.preventDefault();\n    console.log('logging in with', username, password);\n\n    try {\n      const user = await loginService.login({\n        username,\n        password\n      });\n      window.localStorage.setItem('loggedBlogappUser', JSON.stringify(user));\n      blogService.setToken(user.token);\n      setUser(user);\n      setUsername('');\n      setPassword('');\n    } catch (error) {\n      notify('Wrong username or password');\n      setUsername('');\n      setPassword('');\n    }\n  };\n\n  const handleLogout = async () => {\n    window.localStorage.removeItem('loggedBlogappUser', JSON.stringify(user));\n    setUser(null);\n    notify(`${user.name} has been sucessfully logged out.`, 'ok');\n  };\n\n  const loginForm = () => /*#__PURE__*/React.createElement(LoginForm, {\n    username: username,\n    password: password,\n    handleUsernameChange: ({\n      target\n    }) => setUsername(target.value),\n    handlePasswordChange: ({\n      target\n    }) => setPassword(target.value),\n    handleSubmit: handleLogin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 5\n    }\n  }); // const blogForm = () => (\n  //   <Togglable buttonLabel='new blog' ref={blogFormRef}>\n  //     <BlogForm createBlog={addBlog} />\n  //   </Togglable>\n  // )\n  // Display list of blogs\n\n\n  const bloglist = () => blogs.map(blog => /*#__PURE__*/React.createElement(Blog, {\n    key: blog.id,\n    user: user,\n    blog: blog //blogs={blogs}\n    //setBlogs={setBlogs}\n    //deleteBlog={deleteBlog}\n    ,\n    notify: notify,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 5\n    }\n  })); // Sort blogs by number of likes\n\n\n  const sortBlogs = blogs => {\n    blogs.sort((a, b) => {\n      return b.likes - a.likes;\n    });\n  };\n\n  if (user === null) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Notification, {\n      message: notification,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }\n    }), loginForm(), /*#__PURE__*/React.createElement(Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Notification, {\n    message: notification,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }\n  }, \"blogs\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }\n  }, user.name, \" logged in  \", /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    onClick: handleLogout,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 33\n    }\n  }, \"logout\")), blogForm(), sortBlogs(blogs), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }\n  }, bloglist()), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/jonathandennis/MOOC_fullStack/part5/bloglist-frontend/src/App.js"],"names":["React","useState","useEffect","useRef","Blog","Notification","BlogForm","LoginForm","Togglable","Footer","blogService","loginService","initializeBlogs","useDispatch","App","username","setUsername","password","setPassword","user","setUser","notification","setNotification","dispatch","getAll","then","blogs","loggedUserJSON","window","localStorage","getItem","JSON","parse","setToken","token","notify","message","type","setTimeout","handleLogin","event","preventDefault","console","log","login","setItem","stringify","error","handleLogout","removeItem","name","loginForm","target","value","bloglist","map","blog","id","sortBlogs","sort","a","b","likes","blogForm"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\nimport Blog from './components/Blog'\nimport Notification from './components/Notification'\nimport BlogForm from './components/BlogForm'\nimport LoginForm from './components/LoginForm'\nimport Togglable from './components/Togglable'\nimport Footer from './components/Footer'\nimport blogService from './services/blogs'\nimport loginService from './services/login'\n\nimport { initializeBlogs } from './reducers/blogReducer'\nimport { useDispatch } from 'react-redux'\n\nconst App = () => {\n  //const [blogs, setBlogs] = useState([])\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [user, setUser] = useState(null)\n  const [notification, setNotification] = useState(null)\n\n  const dispatch = useDispatch()\n\n  //const blogFormRef = useRef()\n\n  // useEffect(() => {\n  //   blogService.getAll().then(blogs =>\n  //     setBlogs( blogs )\n  //   )\n  // }, [])\n  useEffect(() => {\n    blogService\n      .getAll().then(blogs => dispatch(initializeBlogs(blogs)))\n  }, [dispatch])\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      setUser(user)\n      blogService.setToken(user.token)\n    }\n  }, [])\n\n  const notify = (message, type='error') => {\n    setNotification({ type,message })\n    setTimeout(() => {\n      setNotification(null)\n    }, 5000)\n  }\n\n  // const addBlog = (blogObject) => {\n  //   console.log('blogObject: ', blogObject)\n  //   blogFormRef.current.toggleVisibility()\n  //   blogService\n  //     .create(blogObject)\n  //     .then(returnedBlog => {\n  //       setBlogs(blogs.concat(returnedBlog))\n  //       notify(`a new blog ${blogObject.title} by ${blogObject.author} added`, 'ok')\n  //     })\n  // }\n\n  // const deleteBlog = (id) => {\n  //   const toDelete = blogs.find(blog => blog.id === id)\n\n  //   if (window.confirm(`Remove: ${toDelete.title} By: ${toDelete.author}?`)) {\n\n  //     blogService\n  //       .remove(id)\n  //     setBlogs(blogs.filter(blog => blog.id !== id))\n  //     notify(`${toDelete.title} by ${toDelete.author} was successfully deleted!`, 'ok')\n  //   }\n  // }\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    console.log('logging in with', username, password)\n\n    try {\n      const user = await loginService.login({\n        username, password,\n      })\n\n      window.localStorage.setItem(\n        'loggedBlogappUser', JSON.stringify(user)\n      )\n      blogService.setToken(user.token)\n      setUser(user)\n      setUsername('')\n      setPassword('')\n    } catch (error) {\n      notify('Wrong username or password')\n      setUsername('')\n      setPassword('')\n    }\n  }\n\n  const handleLogout = async () => {\n    window.localStorage.removeItem(\n      'loggedBlogappUser', JSON.stringify(user)\n    )\n    setUser(null)\n    notify(`${user.name} has been sucessfully logged out.`, 'ok')\n  }\n\n  const loginForm = () => (\n    <LoginForm\n      username={username}\n      password={password}\n      handleUsernameChange={({ target }) => setUsername(target.value)}\n      handlePasswordChange={({ target }) => setPassword(target.value)}\n      handleSubmit={handleLogin}\n    />\n  )\n\n  // const blogForm = () => (\n  //   <Togglable buttonLabel='new blog' ref={blogFormRef}>\n  //     <BlogForm createBlog={addBlog} />\n  //   </Togglable>\n  // )\n\n  // Display list of blogs\n  const bloglist = () => blogs.map(blog =>\n    <Blog\n      key={blog.id}\n      user={user}\n      blog={blog}\n      //blogs={blogs}\n      //setBlogs={setBlogs}\n      //deleteBlog={deleteBlog}\n      notify={notify}\n    />\n  )\n\n  // Sort blogs by number of likes\n  const sortBlogs = (blogs) => {\n    blogs.sort((a, b) => {return b.likes - a.likes})\n  }\n\n  if (user === null) {\n    return (\n      <div>\n        <Notification message={notification} />\n        {loginForm()}\n        <Footer />\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      <Notification message={notification} />\n\n      <h2>blogs</h2>\n\n      <p>{user.name} logged in  <button type=\"submit\" onClick={handleLogout}>logout</button></p>\n\n      {blogForm()}\n      {sortBlogs(blogs)}\n      <ul>\n        {bloglist()}\n      </ul>\n      <Footer />\n    </div>\n  )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}