{"ast":null,"code":"var _jsxFileName = \"/Users/jonathandennis/MOOC_fullStack/part5/bloglist-frontend/src/components/Blog.js\";\nimport React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport blogService from '../services/blogs';\nimport { deleteBlog, likeBlog } from '../reducers/blogReducer';\nimport { setNotification } from '../reducers/notificationReducer';\n\nconst Blog = ({\n  user,\n  blog\n}) => {\n  const [visibility, setVisibility] = useState(false);\n  const blogs = useSelector(state => state.blogs);\n  const dispatch = useDispatch();\n  const blogStyle = {\n    paddingTop: 10,\n    paddingLeft: 2,\n    border: 'solid',\n    borderWidth: 1,\n    marginBottom: 5\n  };\n  const hideWhenVisible = {\n    display: visibility ? 'none' : ''\n  };\n  const showWhenVisibile = {\n    display: visibility ? '' : 'none'\n  }; // Allow blogs to be deleted only if blog post created by user\n\n  const showDeleteButton = () => {\n    if (user.username === blog.user['username']) {\n      return /*#__PURE__*/React.createElement(\"button\", {\n        onClick: () => toDeleteBlog(blog.id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 9\n        }\n      }, \"Remove\");\n    }\n  };\n\n  const toDeleteBlog = id => {\n    const toDelete = blogs.find(blog => blog.id === id);\n\n    if (window.confirm(`Remove: ${toDelete.title} By: ${toDelete.author}?`)) {\n      dispatch(deleteBlog(id));\n      blogService.remove(id); //setBlogs(blogs.filter(blog => blog.id !== id))\n\n      dispatch(setNotification(`${toDelete.title} by ${toDelete.author} was successfully deleted!`, 5)); //notify(`${toDelete.title} by ${toDelete.author} was successfully deleted!`, 'ok')\n    }\n  };\n\n  const handleLike = async () => {\n    console.log('blog in handleLike: ', blog); // const likedBlog = {\n    //   title: blog.title,\n    //   likes: blog.likes + 1,\n    //   author: blog.author,\n    //   url: blog.url,\n    //   id: blog.id,\n    //   user: blog.user\n    // }\n\n    try {\n      dispatch(likeBlog(blog));\n      dispatch(setNotification(`Like added to: ${blog.title}`, 5)); // await blogService\n      //   .update(blog.id, likedBlog)\n      // setBlogs(blogs.map(blog => blog.id !== likedBlog.id ? blog : likedBlog))\n      // dispatch(setNotification(`Like added to: ${blog.title}`, 5))\n      //notify(`Like added to: ${blog.title}`, 'ok')\n    } catch (exception) {\n      dispatch(setNotification('Error!', 5)); //notify('Error!')\n    }\n  };\n\n  const toggle = () => {\n    setVisibility(!visibility);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: blogStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: hideWhenVisible,\n    className: \"blog\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, blog.title, blog.author, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }, \"view\"))), /*#__PURE__*/React.createElement(\"div\", {\n    style: showWhenVisibile,\n    className: \"blogView\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }, blog.title, blog.author, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, \"hide\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }), blog.url, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }), blog.likes, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleLike,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, \"like\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }), blog.user.name, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }), showDeleteButton()));\n};\n\nexport default Blog;","map":{"version":3,"sources":["/Users/jonathandennis/MOOC_fullStack/part5/bloglist-frontend/src/components/Blog.js"],"names":["React","useState","useSelector","useDispatch","blogService","deleteBlog","likeBlog","setNotification","Blog","user","blog","visibility","setVisibility","blogs","state","dispatch","blogStyle","paddingTop","paddingLeft","border","borderWidth","marginBottom","hideWhenVisible","display","showWhenVisibile","showDeleteButton","username","toDeleteBlog","id","toDelete","find","window","confirm","title","author","remove","handleLike","console","log","exception","toggle","url","likes","name"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport blogService from '../services/blogs'\n\nimport { deleteBlog, likeBlog } from '../reducers/blogReducer'\nimport { setNotification } from '../reducers/notificationReducer'\n\nconst Blog = ({ user, blog }) => {\n  const [ visibility, setVisibility ] = useState(false)\n\n  const blogs = useSelector(state => state.blogs)\n  const dispatch = useDispatch()\n\n  const blogStyle = {\n    paddingTop: 10,\n    paddingLeft: 2,\n    border: 'solid',\n    borderWidth: 1,\n    marginBottom: 5\n  }\n\n  const hideWhenVisible = { display: visibility ? 'none': '' }\n  const showWhenVisibile = { display: visibility ? '' : 'none' }\n\n  // Allow blogs to be deleted only if blog post created by user\n  const showDeleteButton = () => {\n\n    if (user.username === blog.user['username']) {\n      return (\n        <button onClick={() => toDeleteBlog(blog.id)}>Remove</button>\n      )\n    }\n  }\n\n  const toDeleteBlog = (id) => {\n    const toDelete = blogs.find(blog => blog.id === id)\n\n    if (window.confirm(`Remove: ${toDelete.title} By: ${toDelete.author}?`)) {\n\n      dispatch(deleteBlog(id))\n      blogService\n        .remove(id)\n      //setBlogs(blogs.filter(blog => blog.id !== id))\n      dispatch(setNotification(`${toDelete.title} by ${toDelete.author} was successfully deleted!`, 5))\n      //notify(`${toDelete.title} by ${toDelete.author} was successfully deleted!`, 'ok')\n    }\n  }\n\n  const handleLike = async () => {\n    console.log('blog in handleLike: ', blog)\n    // const likedBlog = {\n    //   title: blog.title,\n    //   likes: blog.likes + 1,\n    //   author: blog.author,\n    //   url: blog.url,\n    //   id: blog.id,\n    //   user: blog.user\n    // }\n\n    try {\n      dispatch(likeBlog(blog))\n      dispatch(setNotification(`Like added to: ${blog.title}`, 5))\n      // await blogService\n      //   .update(blog.id, likedBlog)\n      // setBlogs(blogs.map(blog => blog.id !== likedBlog.id ? blog : likedBlog))\n      // dispatch(setNotification(`Like added to: ${blog.title}`, 5))\n      //notify(`Like added to: ${blog.title}`, 'ok')\n    } catch (exception){\n      dispatch(setNotification('Error!', 5))\n      //notify('Error!')\n    }\n  }\n\n  const toggle = () => {\n    setVisibility(!visibility)\n  }\n\n  return (\n    <div style={blogStyle}>\n      <div style={hideWhenVisible} className='blog'>\n        <li>\n          {blog.title}\n          {blog.author}\n          <button onClick={toggle}>view</button>\n        </li>\n      </div>\n      <div style={showWhenVisibile} className='blogView'>\n        {blog.title}\n        {blog.author}\n        <button onClick={toggle}>hide</button>\n        <br/>\n        {blog.url}\n        <br/>\n        {blog.likes}\n        <button onClick={handleLike}>like</button>\n        <br/>\n        {blog.user.name}\n        <br/>\n        {showDeleteButton()}\n      </div>\n    </div>\n  )\n}\n\nexport default Blog\n"]},"metadata":{},"sourceType":"module"}